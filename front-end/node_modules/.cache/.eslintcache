[{"/Users/xuasong/Documents/GitHub/react/front-end/src/index.js":"1","/Users/xuasong/Documents/GitHub/react/front-end/src/App.js":"2","/Users/xuasong/Documents/GitHub/react/front-end/src/serviceWorker.js":"3","/Users/xuasong/Documents/GitHub/react/front-end/src/services/auth.service.js":"4","/Users/xuasong/Documents/GitHub/react/front-end/src/components/login.component.js":"5","/Users/xuasong/Documents/GitHub/react/front-end/src/components/reset-password.component.js":"6","/Users/xuasong/Documents/GitHub/react/front-end/src/components/forgot.component.js":"7","/Users/xuasong/Documents/GitHub/react/front-end/src/components/forgot-user-access-code.component.js":"8","/Users/xuasong/Documents/GitHub/react/front-end/src/components/profile.component.js":"9","/Users/xuasong/Documents/GitHub/react/front-end/src/components/home.component.js":"10","/Users/xuasong/Documents/GitHub/react/front-end/src/components/board-user.component.js":"11","/Users/xuasong/Documents/GitHub/react/front-end/src/components/board-admin.component.js":"12","/Users/xuasong/Documents/GitHub/react/front-end/src/components/profile-edit.component.js":"13","/Users/xuasong/Documents/GitHub/react/front-end/src/components/register.component.js":"14","/Users/xuasong/Documents/GitHub/react/front-end/src/components/person-management-create.component.js":"15","/Users/xuasong/Documents/GitHub/react/front-end/src/components/person-management.component.js":"16","/Users/xuasong/Documents/GitHub/react/front-end/src/common/EventBus.js":"17","/Users/xuasong/Documents/GitHub/react/front-end/src/components/person-management-list.js":"18","/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management.component.js":"19","/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management-list.js":"20","/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management-create.component.js":"21","/Users/xuasong/Documents/GitHub/react/front-end/src/common/validators.js":"22","/Users/xuasong/Documents/GitHub/react/front-end/src/common/person-validators.js":"23","/Users/xuasong/Documents/GitHub/react/front-end/src/common/user-validators.js":"24","/Users/xuasong/Documents/GitHub/react/front-end/src/services/user.service.js":"25","/Users/xuasong/Documents/GitHub/react/front-end/src/services/person.service.js":"26","/Users/xuasong/Documents/GitHub/react/front-end/src/services/person-management.service.js":"27","/Users/xuasong/Documents/GitHub/react/front-end/src/services/medication-management.service.js":"28","/Users/xuasong/Documents/GitHub/react/front-end/src/services/auth-header.js":"29","/Users/xuasong/Documents/GitHub/react/front-end/src/http-common.js":"30"},{"size":320,"mtime":1635906480000,"results":"31","hashOfConfig":"32"},{"size":5498,"mtime":1638843312721,"results":"33","hashOfConfig":"32"},{"size":5340,"mtime":1635906480000,"results":"34","hashOfConfig":"32"},{"size":1073,"mtime":1637418036027,"results":"35","hashOfConfig":"32"},{"size":3947,"mtime":1637007205906,"results":"36","hashOfConfig":"32"},{"size":4027,"mtime":1637268489687,"results":"37","hashOfConfig":"32"},{"size":3304,"mtime":1637007205905,"results":"38","hashOfConfig":"32"},{"size":3472,"mtime":1637418036024,"results":"39","hashOfConfig":"32"},{"size":2085,"mtime":1637418036026,"results":"40","hashOfConfig":"32"},{"size":783,"mtime":1635906480000,"results":"41","hashOfConfig":"32"},{"size":999,"mtime":1635906480000,"results":"42","hashOfConfig":"32"},{"size":1001,"mtime":1635906480000,"results":"43","hashOfConfig":"32"},{"size":12483,"mtime":1637418036025,"results":"44","hashOfConfig":"32"},{"size":13165,"mtime":1637418036026,"results":"45","hashOfConfig":"32"},{"size":13378,"mtime":1637418036024,"results":"46","hashOfConfig":"32"},{"size":15818,"mtime":1637418036025,"results":"47","hashOfConfig":"32"},{"size":326,"mtime":1635906480000,"results":"48","hashOfConfig":"32"},{"size":8179,"mtime":1638833661210,"results":"49","hashOfConfig":"32"},{"size":13580,"mtime":1638827118301,"results":"50","hashOfConfig":"32"},{"size":7322,"mtime":1638846400067,"results":"51","hashOfConfig":"32"},{"size":12272,"mtime":1638845229884,"results":"52","hashOfConfig":"32"},{"size":656,"mtime":1637268489683,"results":"53","hashOfConfig":"32"},{"size":1364,"mtime":1637268489682,"results":"54","hashOfConfig":"32"},{"size":475,"mtime":1637268489683,"results":"55","hashOfConfig":"32"},{"size":824,"mtime":1637418036028,"results":"56","hashOfConfig":"32"},{"size":400,"mtime":1637418036028,"results":"57","hashOfConfig":"32"},{"size":930,"mtime":1638741779389,"results":"58","hashOfConfig":"32"},{"size":1534,"mtime":1638845259272,"results":"59","hashOfConfig":"32"},{"size":344,"mtime":1638673710617,"results":"60","hashOfConfig":"32"},{"size":157,"mtime":1637268489687,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"io47uh",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xuasong/Documents/GitHub/react/front-end/src/index.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/App.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/serviceWorker.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/services/auth.service.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/login.component.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/reset-password.component.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/forgot.component.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/forgot-user-access-code.component.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/profile.component.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/home.component.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/board-user.component.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/board-admin.component.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/profile-edit.component.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/register.component.js",["127"],"import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { vrequired, vemail, vdate } from \"../common/validators\";\nimport { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\nimport { vusername, vpassword } from \"../common/user-validators\";\n\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\nimport PersonService from \"../services/person.service\";\n\n\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeGenderId = this.onChangeGenderId.bind(this);\n    this.onChangePronounId = this.onChangePronounId.bind(this);\n    this.onChangeSexAtBirthId = this.onChangeSexAtBirthId.bind(this);\n    this.onChangeStateId = this.onChangeStateId.bind(this);\n    this.onChangeBirthday = this.onChangeBirthday.bind(this);\n    this.onChangeCity = this.onChangeCity.bind(this);\n    this.onChangeZip = this.onChangeZip.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      address: \"\",\n      sex_at_birth_id: \"\",\n      gender_id: \"\",\n      pronoun_id: \"\",\n      state_id: \"\",\n      birthday: \"\",\n      city: \"\",\n      zip: \"\",\n      successful: false,\n      message: \"\",\n      // dropdown options\n      genders: [],\n      pronouns: [],\n      sexAtBirths: [],\n      states: [],\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeFirstName(e){\n    this.setState({\n      firstName: e.target.value\n    });\n  }\n\n  onChangeLastName(e){\n    this.setState({\n      lastName: e.target.value\n    });\n  }\n\n  onChangeAddress(e){\n    this.setState({\n      address: e.target.value\n    });\n  }\n\n  onChangeGenderId(e){\n    this.setState({\n      gender_id: e.target.value\n    });\n  }\n\n  onChangePronounId(e){\n    this.setState({\n      pronoun_id: e.target.value\n    });\n  }\n\n  onChangeSexAtBirthId(e){\n    this.setState({\n      sex_at_birth_id: e.target.value\n    });\n  }\n\n  onChangeStateId(e){\n    this.setState({\n      state_id: e.target.value\n    });\n  }\n  \n  onChangeBirthday(e){\n    this.setState({\n      birthday: e.target.value\n    });\n  }\n\n  onChangeCity(e){\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  onChangeZip(e){\n    this.setState({\n      zip: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    PersonService.getGenders().then(\n      response => {\n        this.setState({\n          genders: response.data.result\n        });\n      },\n      error => {\n        console.log(error);\n      }\n    );\n    PersonService.getPronouns().then(\n      response => {\n        this.setState({\n          pronouns: response.data.result\n        });\n      },\n      error => {\n        console.log(error);\n      }\n    );\n    PersonService.getSexAtBirths().then(\n      response => {console.log(response.data.result);\n        this.setState({\n          sexAtBirths: response.data.result\n        });\n      },\n      error => {\n        console.log(error);\n      }\n    );\n    PersonService.getStates().then(\n      response => {\n        this.setState({\n          states: response.data.result\n        });\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n  \n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register({\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        address: this.state.address,\n        birthday: this.state.birthday,\n        gender_id: this.state.gender_id,\n        pronoun_id: this.state.pronoun_id,\n        sex_at_birth_id: this.state.sex_at_birth_id,\n        state_id: this.state.state_id,\n        city: this.state.city,\n        zip: this.state.zip\n      }).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[vrequired, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[vrequired, vemail]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[vrequired, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"firstName\">FirstName</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"firstName\"\n                    value={this.state.firstName}\n                    onChange={this.onChangeFirstName}\n                    validations={[vrequired, vfirstName]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"lastName\">LastName</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"lastName\"\n                    value={this.state.lastName}\n                    onChange={this.onChangeLastName}\n                    validations={[vrequired, vlastName]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"birthday\">Birthday</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"birthday\"\n                    value={this.state.birthday}\n                    onChange={this.onChangeBirthday}\n                    validations={[vrequired, vdate]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"gender_id\">Gender</label>\n                  <Select\n                    onChange={this.onChangeGenderId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.genders.length > 0 &&\n                      this.state.genders.map(item => (\n                        <option key={item.gender_id} value={item.gender_id}>\n                          {item.gender}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"pronoun_id\">Pronoun</label>\n                  <Select\n                    onChange={this.onChangePronounId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.pronouns.length > 0 &&\n                      this.state.pronouns.map(item => (\n                        <option key={item.pronoun_id} value={item.pronoun_id}>\n                          {item.pronoun}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"sex_at_birth_id\">Sex At Birth</label>\n                  <Select\n                    onChange={this.onChangeSexAtBirthId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.sexAtBirths.length > 0 &&\n                      this.state.sexAtBirths.map(item => (\n                        <option key={item.sex_at_birth_id} value={item.sex_at_birth_id}>\n                          {item.sex_at_birth}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"address\">Address</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"address\"\n                    value={this.state.address}\n                    onChange={this.onChangeAddress}\n                    validations={[vrequired, vaddress]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"city\">City</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"city\"\n                    value={this.state.city}\n                    onChange={this.onChangeCity}\n                    validations={[vrequired, vcity]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"state_id\">State</label>\n                  <Select\n                    onChange={this.onChangeStateId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.states.length > 0 &&\n                      this.state.states.map(item => (\n                        <option key={item.state_id} value={item.state_id}>\n                          {item.state}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"zip\">Zip</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"zip\"\n                    value={this.state.zip}\n                    onChange={this.onChangeZip}\n                    validations={[vrequired, vzip]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","/Users/xuasong/Documents/GitHub/react/front-end/src/components/person-management-create.component.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/person-management.component.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/common/EventBus.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/person-management-list.js",["128"],"import React, { Component } from \"react\";\nimport PersonManagementDataService from \"../services/person-management.service\";\nimport { Link } from \"react-router-dom\";\n\nexport default class PersonManagementList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchFirstName = this.onChangeSearchFirstName.bind(this);\n    this.onChangeSearchLastName = this.onChangeSearchLastName.bind(this);\n    this.onChangeSearchBirthday = this.onChangeSearchBirthday.bind(this);\n\n    this.deletePersonManagement = this.deletePersonManagement.bind(this);\n    this.retrievePersonManagement = this.retrievePersonManagement.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActivePersonManagement = this.setActivePersonManagement.bind(this);\n    this.searchPerson = this.searchPerson.bind(this);\n\n    this.state = {\n      personManagement: [],\n      currentPersonManagement: null,\n      currentIndex: -1,\n      searchParams: {\n        firstName: \"\",\n        lastName: \"\",\n        birthday: \"\"\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.retrievePersonManagement();\n  }\n\n  deletePersonManagement() {    \n    PersonManagementDataService.delete(this.state.currentPersonManagement.person_id)\n      .then(() => {\n        //this.props.history.push('/person-management')\n        window.location.reload();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  onChangeSearchFirstName(e) {\n    const searchFirstName = e.target.value;\n    this.setState({ \n      searchParams: { ...this.state.searchParams, firstName: searchFirstName} \n    });\n    console.log(this.state);\n  }\n\n  onChangeSearchLastName(e) {\n    const searchLastName = e.target.value;\n    this.setState({ \n      searchParams: { ...this.state.searchParams, lastName: searchLastName} \n    });\n    console.log(this.state);\n  }\n\n  onChangeSearchBirthday(e) {\n    const searchBirthday = e.target.value;\n    this.setState({ \n      searchParams: { ...this.state.searchParams, birthday: searchBirthday} \n    });\n    console.log(this.state);\n  }\n\n  retrievePersonManagement() {\n    PersonManagementDataService.getAll()\n      .then(response => {\n        this.setState({\n          personManagement: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrievePersonManagement();\n    this.setState({\n      currentPersonManagement: null,\n      currentIndex: -1\n    });\n  }\n\n  setActivePersonManagement(personManagement, index) {console.log(personManagement);\n    this.setState({\n      currentPersonManagement: personManagement,\n      currentIndex: index\n    });\n  }\n\n  searchPerson() {\n    this.setState({\n      currentPersonManagement: null,\n      currentIndex: -1\n    });\n\n    PersonManagementDataService.findPerson(this.state.searchParams)\n      .then(response => {\n        this.setState({\n          personManagement: response.data\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { personManagement, currentPersonManagement, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"First Name\"\n              value={this.state.searchParams.firstName}\n              onChange={this.onChangeSearchFirstName}\n            />\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Last Name\"\n              value={this.state.searchParams.lastName}\n              onChange={this.onChangeSearchLastName}\n            />\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Birthday\"\n              value={this.state.searchParams.birthday}\n              onChange={this.onChangeSearchBirthday}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.searchPerson}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Person Management List</h4>\n\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">First</th>\n                <th scope=\"col\">Last</th>\n                <th scope=\"col\">Birthday</th>\n              </tr>\n            </thead>\n            <tbody>\n              {personManagement &&\n                personManagement.map((personManagement, index) => (\n                  <tr \n                    role=\"row\" \n                    key={personManagement.person_id}\n                    onClick={() => this.setActivePersonManagement(personManagement, index)}\n                  >\n                    <td>{personManagement.firstName}</td>\n                    <td>{personManagement.lastName}</td>\n                    <td>{personManagement.birthday}</td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"col-md-6\">\n          {currentPersonManagement ? ( \n            <div>\n              <h4>Person Info</h4>\n              <div>\n                <label>\n                  <strong>Name:</strong>\n                </label>{\" \"}\n                {currentPersonManagement.firstName} {currentPersonManagement.lastName}\n              </div>\n              <div>\n                <label>\n                  <strong>Email:</strong>\n                </label>{\" \"}\n                {currentPersonManagement.email}\n              </div>\n              <div>\n                <label>\n                  <strong>Birthday:</strong>\n                </label>{\" \"}\n                {currentPersonManagement.birthday}\n              </div>\n              <div>\n                <label>\n                  <strong>Gender:</strong>\n                </label>{\" \"}\n                {currentPersonManagement.gender.gender}\n              </div>\n              <div>\n                <label>\n                  <strong>Pronouns:</strong>\n                </label>{\" \"}\n                {currentPersonManagement.pronoun.pronoun}\n              </div>\n              <div>\n                <label>\n                  <strong>Sex at Birth:</strong>\n                </label>{\" \"}\n                {currentPersonManagement.sex_at_birth.sex_at_birth}\n              </div>\n              <div>\n                <label>\n                  <strong>Address:</strong>\n                </label>{\" \"}\n                {currentPersonManagement.address}\n              </div>\n              <div>\n                <label>\n                  <strong>City:</strong>\n                </label>{\" \"}\n                {currentPersonManagement.city}\n              </div>\n              <div>\n                <label>\n                  <strong>State:</strong>\n                </label>{\" \"}\n                {currentPersonManagement.state.state}\n              </div>\n              <div>\n                <label>\n                  <strong>Zip:</strong>\n                </label>{\" \"}\n                {currentPersonManagement.zip}\n              </div>\n              \n              <Link\n                to={\"/person-management/\" + currentPersonManagement.person_id + \"/medications\"}\n                className=\"btn btn-primary btn-block\"\n              >\n                Medication Record\n              </Link>\n              <Link\n                to={\"/person-management/\" + currentPersonManagement.person_id}\n                className=\"btn btn-primary btn-block\"\n              >\n                Edit\n              </Link>\n              <button\n                className=\"btn btn-danger btn-block\"\n                onClick={this.deletePersonManagement}\n              >\n                Delete\n              </button>\n\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a User...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management.component.js",["129","130","131","132","133","134","135"],"import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport { vrequired, vemail, vdate } from \"../common/validators\";\nimport { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\n\nimport MedicationManagementDataService from \"../services/medication-management.service\";\n\n\nexport default class MedicationManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePatientId = this.onChangePatientId.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.onChangeMedicationFrequencyId = this.onChangeMedicationFrequencyId.bind(this);\n    this.onChangeMedicationMeasurementId = this.onChangeMedicationMeasurementId .bind(this);\n    this.onChangePrescribedBy = this.onChangePrescribedBy.bind(this);\n    this.onChangePrescribedOn= this.onChangePrescribedOn.bind(this);\n    this.onChangePharmacyId = this.onChangePharmacyId.bind(this);\n\n    this.getMedicationManagement = this.getMedicationManagement.bind(this);\n    this.updateMedicationManagement = this.updateMedicationManagement.bind(this);\n\n    this.state = {\n\n      currentMedicationManagement: {\n        patient_id: \"\",\n\n        medication_id: \"\",\n        amount: \"\",\n        medication_frequency_id: \"\",\n        medication_measurement_id: \"\",\n        prescribed_by: \"\",\n        prescribed_on: \"\",\n        pharmacy_id: \"\"\n      },\n      message: \"\",\n      submitted: false,\n  \n      // dropdown options\n      medications: [],\n      medicationFrequencies: [],\n      medicationMeasurements: [],\n      doctors: [],    \n      pharmacies: [],\n        \n    };\n     \n  }\n\n  onChangeMedicationID(e) {\n    const medication_id = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentMedicationManagement: {\n          ...prevState.currentMedicationManagement,\n          medication_id: medication_id\n        }\n      };\n    });\n  }\n\n  onChangeMedicationFrequencyId(e) {\n    const medication_frequency_id = e.target.value;\n    this.setState(function(prevState) {\n      return {\n        currentMedicationManagement: {\n          ...prevState.currentMedicationManagement,\n          medication_frequency_id:medication_frequency_id\n        }\n      };\n    });\n  }\n\n  onChangeMedicationMeasurementId(e) {\n    const medication_measurement_id = e.target.value;\n    this.setState(function(prevState) {\n      return {\n        currentMedicationManagement: {\n          ...prevState.currentMedicationManagement,\n          medication_measurement_id:medication_measurement_id\n        }\n      };\n    });\n  }\n\n\n  getMedicationManagement(medication_id) {\n    MedicationManagementDataService.get(medication_id)\n      .then(response => {\n        this.setState({\n          currentMedicationManagement: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateMedicationManagement(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      MedicationManagementDataService.update(\n        this.state.currentMedicationManagement.medication_id,\n        this.state.currentMedicationManagement\n      ).then(\n        response => {\n          this.props.history.push('/medication-management')\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    }\n  }\n\n  componentDidMount() {\n    this.getMedicationManagement(this.props.match.params.medication_id);\n\n    \n    // get drop down information\n    \n    MedicationManagementDataService.getMedications().then(\n      response => {\n        this.setState({\n          medications: response.data.result\n        });\n      },\n     error => {\n       this.setState({\n         meciations:\n           (error.response &&\n             error.response.data &&\n             error.response.data.message) ||\n           error.message ||\n           error.toString()\n       });\n     }\n   );\n\n   MedicationManagementDataService.getMedicationFrequencies().then(\n     response => {\n       this.setState({\n         medicationFrequencies: response.data.result\n       });\n     },\n     error => {\n       this.setState({\n         medicationFrequencies:\n           (error.response &&\n             error.response.data &&\n             error.response.data.message) ||\n           error.message ||\n           error.toString()\n       });\n     }\n   );\n\n   MedicationManagementDataService.getMedicationMeasurements().then(\n     response => {\n       this.setState({\n         medicationMeasurements: response.data.result\n       });\n     },\n     error => {\n       this.setState({\n         medicationMeasurements:\n           (error.response &&\n             error.response.data &&\n             error.response.data.message) ||\n           error.message ||\n           error.toString()\n       });\n     }\n   );\n\n   MedicationManagementDataService.getDoctors().then(\n       response => {\n         this.setState({\n           doctors: response.data.result\n         });\n         console.log(this.state);\n       },\n       error => {\n         this.setState({\n           doctors:\n             (error.response &&\n               error.response.data &&\n               error.response.data.message) ||\n             error.message ||\n             error.toString()\n         });\n       }\n     );\n\n   MedicationManagementDataService.getPharmacies().then(\n     response => {\n       this.setState({\n         pharmacies: response.data.result\n       });\n     },\n     error => {\n       this.setState({\n         pharmacies:\n           (error.response &&\n             error.response.data &&\n             error.response.data.message) ||\n           error.message ||\n           error.toString()\n       });\n     }\n   );\n  }\n\n  render() {\n    const { currentMedicationManagement } = this.state;\n\n    return (\n      <div>\n        {currentMedicationManagement ? (\n          <div className=\"edit-form\">\n            <h4>Edit Medication</h4>\n              <Form\n                onSubmit={this.updateMedicationManagement}\n                ref={c => {\n                  this.form = c;\n                }}\n              >\n                {!this.state.submitted && ( <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_id\">Medication</label>\n                  <Select\n                    value={this.state.medication_id}\n                    onChange={this.onChangeMedicationId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medications.length > 0 &&\n                      this.state.medications.map(item => (\n                        <option key={item.medication_id} value={item.medication_id}>\n                          {item.medications}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"amount\">Amount</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"amount\"\n                    value={this.state.amount}\n                    onChange={this.onChangeAmount}\n                    validations={[vrequired]}\n                  />\n                </div>\n\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_frequency_id\">Medication Frequency</label>\n                  <Select\n                    value={this.state.medication_frequency_id}\n                    onChange={this.onChangeMedicationFrequencyId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medicationFrequencies.length > 0 &&\n                      this.state.medicationFrequencies.map(item => (\n                        <option key={item.medication_frequency_id} value={item.medication_frequency_id}>\n                          {item.medicationFrequencies}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                 <div className=\"form-group\">\n                  <label htmlFor=\"medication_measurement_id\">Medication Measurement</label>\n                  <Select\n                    value={this.state.medication_measurement_id}\n                    onChange={this.onChangeMedicationMeasurementId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medicationMeasurements.length > 0 &&\n                      this.state.medicationMeasurements.map(item => (\n                        <option key={item.medication_measurement_id} value={item.medication_measurement_id}>\n                          {item.medicationMeasurements}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                {/* <div className=\"form-group\">\n                  <label htmlFor=\"medication_frequency_id\">Medication Frequency</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.medication_frequency_id}\n                    onChange={this.onChangeMedicationFrequency}\n                    // validations={[vrequired, vemail]}\n                  />\n                </div> */}\n\n                {/* <div className=\"form-group\">\n                  <label htmlFor=\"medication_measurement_id\">Medication Measurement</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"birthday\"\n                    value={this.state.medication_measurement_id}\n                    onChange={this.onChangeMedicationMeasurementId}\n                    // validations={[vrequired, vdate]}\n                  />\n                </div> */}\n\n               <div className=\"form-group\">\n                  <label htmlFor=\"prescribed_by\">Prescribed By</label>\n                  <Select\n                    value={this.state.prescribed_by}\n                    onChange={this.onChangePrescribedBy}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.doctors.length > 0 &&\n                      this.state.doctors.map(item => (\n                        <option key={item.person_id} value={item.person_id}>\n                          {item.firstName} {item.lastName}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n \n                <div className=\"form-group\">\n                  <label htmlFor=\"prescribed_on\">Prescribed On</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"prescribed_on\"\n                    value={this.state.prescribed_on}\n                    onChange={this.onChangePrescribedOn}\n                    validations={[vrequired, vdate]}\n                  />\n                </div> \n             \n\n                 <div className=\"form-group\">\n                  <label htmlFor=\"pharmacy_id\">Pharmacy</label>\n                  <Select\n                    value={this.state.pharmacy_id}\n                    onChange={this.onChangePharmacyId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.pharmacies.length > 0 &&\n                      this.state.pharmacies.map(item => (\n                        <option key={item.pharmacy_id} value={item.pharmacy_id}>\n                          {item.pharmacies}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n\n\n                    <div className=\"form-group\">\n                      <button className=\"btn btn-primary btn-block\">Save</button>\n                    </div>\n                  </div>\n                )}\n\n                {this.state.message && (\n                  <div className=\"form-group\">\n                    <div\n                      className={\n                        this.state.successful\n                          ? \"alert alert-success\"\n                          : \"alert alert-danger\"\n                      }\n                      role=\"alert\"\n                    >\n                      {this.state.message}\n                    </div>\n                  </div>\n                )}\n                <CheckButton\n                  style={{ display: \"none\" }}\n                  ref={c => {\n                    this.checkBtn = c;\n                  }}\n                />\n              </Form>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Could not find medication</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management-list.js",["136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management-create.component.js",["150","151","152","153","154","155","156"],"import React, { Component } from \"react\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport { vrequired, vemail, vdate } from \"../common/validators\";\nimport { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\n\nimport MedicationManagementDataService from \"../services/medication-management.service\";\n// import MedicationService from \"../services/medication.service\";\n\n\nexport default class MedicationManagementCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.saveMedicationManagement = this.saveMedicationManagement.bind(this);\n    // this.onChangePatientId = this.onChangePatientId.bind(this);\n    this.onChangeMedicationId = this.onChangeMedicationId.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.onChangeMedicationFrequencyId = this.onChangeMedicationFrequencyId.bind(this);\n    this.onChangeMedicationMeasurementId = this.onChangeMedicationMeasurementId .bind(this);\n    this.onChangePrescribedBy = this.onChangePrescribedBy.bind(this);\n    this.onChangePrescribedOn= this.onChangePrescribedOn.bind(this);\n    this.onChangePharmacyId = this.onChangePharmacyId.bind(this);\n\n    this.state = {\n        patient_id: this.props.match.params.patient_id,// null,\n        medication_id: \"\",\n        amount: \"\",\n        medication_frequency_id: \"\",\n        medication_measurement_id: \"\",\n        prescribed_by: \"\", // dropdown list of all doctors\n        prescribed_on: \"\",\n        pharmacy_id: \"\",\n       \n        medications: [],\n        medicationFrequencies: [],\n        medicationMeasurements: [],\n        doctors: [],\n        pharmacies: [],\n\n        submitted: false,\n        message: \"\",\n    };\n    console.log(this.state);\n  }\n\n//   onChangePatientId(e) {\n//     this.setState({\n//       patient_id: e.target.value\n//     });\n//   }\n\n  onChangeMedicationId(e) {\n    this.setState({\n      medication_id: e.target.value\n    });\n  }\n\n  onChangeAmount(e) {\n    this.setState({\n      amount: e.target.value\n    });\n  }\n\n  onChangeMedicationFrequencyId(e) {\n    this.setState({\n      medication_frequency_id: e.target.value\n    });\n  }\n\n  onChangeMedicationMeasurementId(e) {\n    this.setState({\n      medication_measurement_id: e.target.value\n    });\n  }\n\n  onChangePrescribedBy(e) {\n    this.setState({\n       prescribed_by: e.target.value\n    });\n  }\n\n  onChangePrescribedOn(e) {\n    this.setState({\n       prescribed_on: e.target.value\n    });\n  }\n\n  onChangePharmacyId(e) {\n    this.setState({\n        pharmacy_id: e.target.value\n    });\n  }\n\n  saveMedicationManagement(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      var data = {\n        patient_id: this.state.patient_id,\n        medication_id: this.state.medication_id,\n        amount: this.state.amount,\n        medication_frequency_id: this.state.medication_frequency_id,\n        medication_measurement_id: this.state.medication_measurement_id,\n        prescribed_by: this.state.prescribed_by,\n        prescribed_on: this.state.prescribed_on,\n        pharmacy_id: this.state.pharmacy_id,\n      };\n\n      MedicationManagementDataService.create(data)\n        .then(\n          response => {\n            this.props.history.push(\"/person-management/\"+ this.state.patient_id+ \"/medications\");\n            window.location.reload();\n          },\n          error => {\n            const resMessage =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n\n            this.setState({\n              successful: false,\n              message: resMessage\n            });\n          }\n        )\n        .catch(e => {\n          console.log(e);\n        });\n    }\n  }\n\n\n\n   componentDidMount() {\n     // get drop down information\n    \n\n     MedicationManagementDataService.getMedications().then(\n       response => {\n         this.setState({\n           medications: response.data.result\n         });\n       },\n      error => {\n        this.setState({\n          meciations:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n\n    MedicationManagementDataService.getMedicationFrequencies().then(\n      response => {\n        console.log(response);\n        this.setState({\n          medicationFrequencies: response.data.result\n        });\n      },\n      error => {\n        this.setState({\n          medicationFrequencies:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n\n    MedicationManagementDataService.getMedicationMeasurements().then(\n      response => {\n        console.log(response);\n        this.setState({\n          medicationMeasurements: response.data.result\n        });\n      },\n      error => {\n        this.setState({\n          medicationMeasurements:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n\n    MedicationManagementDataService.getDoctors().then(\n        response => {\n          this.setState({\n            doctors: response.data.result\n          });\n          console.log(this.state);\n        },\n        error => {\n          this.setState({\n            doctors:\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString()\n          });\n        }\n      );\n\n    MedicationManagementDataService.getPharmacies().then(\n      response => {\n        this.setState({\n          pharmacies: response.data.result\n        });\n      },\n      error => {\n        this.setState({\n          pharmacies:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n   }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n          <Form\n            onSubmit={this.saveMedicationManagement}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.submitted && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_id\">Medication</label>\n                  <Select\n                    value={this.state.medication_id}\n                    onChange={this.onChangeMedicationId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medications.length > 0 &&\n                      this.state.medications.map(item => (\n                        <option key={item.medication_id} value={item.medication_id}>\n                          {item.medication}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"amount\">Amount</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"amount\"\n                    value={this.state.amount}\n                    onChange={this.onChangeAmount}\n                    validations={[vrequired]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_frequency_id\">Medication Frequency</label>\n                  <Select\n                    value={this.state.medication_frequency_id}\n                    onChange={this.onChangeMedicationFrequencyId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medicationFrequencies.length > 0 &&\n                      this.state.medicationFrequencies.map(item => (\n                        <option key={item.medication_frequency_id} value={item.medication_frequency_id}>\n                          {item.medication_frequency}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_measurement_id\">Medication Measurement</label>\n                  <Select\n                    value={this.state.medication_measurement_id}\n                    onChange={this.onChangeMedicationMeasurementId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medicationMeasurements.length > 0 &&\n                      this.state.medicationMeasurements.map(item => (\n                        <option key={item.medication_measurement_id} value={item.medication_measurement_id}>\n                          {item.medication_measurement}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"prescribed_by\">Prescribed By</label>\n                  <Select\n                    value={this.state.prescribed_by}\n                    onChange={this.onChangePrescribedBy}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.doctors.length > 0 &&\n                      this.state.doctors.map(item => (\n                        <option key={item.person_id} value={item.person_id}>\n                          {item.firstName} {item.lastName}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"prescribed_on\">Prescribed On</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"prescribed_on\"\n                    value={this.state.prescribed_on}\n                    onChange={this.onChangePrescribedOn}\n                    validations={[vrequired, vdate]}\n                  />\n                </div> \n\n                <div className=\"form-group\">\n                  <label htmlFor=\"pharmacy_id\">Pharmacy</label>\n                  <Select\n                    value={this.state.pharmacy_id}\n                    onChange={this.onChangePharmacyId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.pharmacies.length > 0 &&\n                      this.state.pharmacies.map(item => (\n                        <option key={item.pharmacy_id} value={item.pharmacy_id}>\n                          {item.name}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Save</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n      </div>\n    );\n  }\n}\n","/Users/xuasong/Documents/GitHub/react/front-end/src/common/validators.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/common/person-validators.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/common/user-validators.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/services/user.service.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/services/person.service.js",["157"],"import http from \"../http-common\";\nimport authHeader from './auth-header';\n\nclass PersonService {\n  getGenders() {\n    return http.get('/person/getGenders');\n  }\n  getPronouns() {\n    return http.get('/person/getPronouns');\n  }\n  getSexAtBirths() {\n    return http.get('/person/getSexAtBirths');\n  }\n  getStates() {\n    return http.get('/person/getStates');\n  }\n}\n\nexport default new PersonService();","/Users/xuasong/Documents/GitHub/react/front-end/src/services/person-management.service.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/services/medication-management.service.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/services/auth-header.js",[],"/Users/xuasong/Documents/GitHub/react/front-end/src/http-common.js",[],{"ruleId":"158","severity":1,"message":"159","line":12,"column":8,"nodeType":"160","messageId":"161","endLine":12,"endColumn":19},{"ruleId":"158","severity":1,"message":"162","line":115,"column":56,"nodeType":"160","messageId":"161","endLine":115,"endColumn":68},{"ruleId":"158","severity":1,"message":"163","line":6,"column":21,"nodeType":"160","messageId":"161","endLine":6,"endColumn":27},{"ruleId":"158","severity":1,"message":"164","line":7,"column":10,"nodeType":"160","messageId":"161","endLine":7,"endColumn":20},{"ruleId":"158","severity":1,"message":"165","line":7,"column":22,"nodeType":"160","messageId":"161","endLine":7,"endColumn":31},{"ruleId":"158","severity":1,"message":"166","line":7,"column":33,"nodeType":"160","messageId":"161","endLine":7,"endColumn":41},{"ruleId":"158","severity":1,"message":"167","line":7,"column":43,"nodeType":"160","messageId":"161","endLine":7,"endColumn":48},{"ruleId":"158","severity":1,"message":"168","line":7,"column":50,"nodeType":"160","messageId":"161","endLine":7,"endColumn":54},{"ruleId":"169","severity":1,"message":"170","line":18,"column":44,"nodeType":"171","messageId":"172","endLine":18,"endColumn":86,"fix":"173"},{"ruleId":"158","severity":1,"message":"174","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":35},{"ruleId":"158","severity":1,"message":"175","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":12},{"ruleId":"158","severity":1,"message":"176","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":13},{"ruleId":"158","severity":1,"message":"177","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":14},{"ruleId":"158","severity":1,"message":"178","line":8,"column":8,"nodeType":"160","messageId":"161","endLine":8,"endColumn":19},{"ruleId":"158","severity":1,"message":"179","line":9,"column":10,"nodeType":"160","messageId":"161","endLine":9,"endColumn":19},{"ruleId":"158","severity":1,"message":"163","line":9,"column":21,"nodeType":"160","messageId":"161","endLine":9,"endColumn":27},{"ruleId":"158","severity":1,"message":"180","line":9,"column":29,"nodeType":"160","messageId":"161","endLine":9,"endColumn":34},{"ruleId":"158","severity":1,"message":"164","line":10,"column":10,"nodeType":"160","messageId":"161","endLine":10,"endColumn":20},{"ruleId":"158","severity":1,"message":"165","line":10,"column":22,"nodeType":"160","messageId":"161","endLine":10,"endColumn":31},{"ruleId":"158","severity":1,"message":"166","line":10,"column":33,"nodeType":"160","messageId":"161","endLine":10,"endColumn":41},{"ruleId":"158","severity":1,"message":"167","line":10,"column":43,"nodeType":"160","messageId":"161","endLine":10,"endColumn":48},{"ruleId":"158","severity":1,"message":"168","line":10,"column":50,"nodeType":"160","messageId":"161","endLine":10,"endColumn":54},{"ruleId":"158","severity":1,"message":"162","line":106,"column":64,"nodeType":"160","messageId":"161","endLine":106,"endColumn":76},{"ruleId":"158","severity":1,"message":"163","line":7,"column":21,"nodeType":"160","messageId":"161","endLine":7,"endColumn":27},{"ruleId":"158","severity":1,"message":"164","line":8,"column":10,"nodeType":"160","messageId":"161","endLine":8,"endColumn":20},{"ruleId":"158","severity":1,"message":"165","line":8,"column":22,"nodeType":"160","messageId":"161","endLine":8,"endColumn":31},{"ruleId":"158","severity":1,"message":"166","line":8,"column":33,"nodeType":"160","messageId":"161","endLine":8,"endColumn":41},{"ruleId":"158","severity":1,"message":"167","line":8,"column":43,"nodeType":"160","messageId":"161","endLine":8,"endColumn":48},{"ruleId":"158","severity":1,"message":"168","line":8,"column":50,"nodeType":"160","messageId":"161","endLine":8,"endColumn":54},{"ruleId":"169","severity":1,"message":"170","line":22,"column":44,"nodeType":"171","messageId":"172","endLine":22,"endColumn":86,"fix":"181"},{"ruleId":"158","severity":1,"message":"182","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":18},"no-unused-vars","'UserService' is defined but never used.","Identifier","unusedVar","'currentIndex' is assigned a value but never used.","'vemail' is defined but never used.","'vfirstName' is defined but never used.","'vlastName' is defined but never used.","'vaddress' is defined but never used.","'vcity' is defined but never used.","'vzip' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property bind.","MemberExpression","unexpectedWhitespace",{"range":"183","text":"184"},"'PersonManagementDataService' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Select' is defined but never used.","'CheckButton' is defined but never used.","'vrequired' is defined but never used.","'vdate' is defined but never used.",{"range":"185","text":"184"},"'authHeader' is defined but never used.",[890,892],".",[1115,1117]]