{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jking4\\\\Desktop\\\\react\\\\front-end\\\\src\\\\components\\\\person-management-create.component.js\";\nimport React, { Component } from \"react\";\nimport UserManagementDataService from \"../services/person-management.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserManagementCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePersonID = this.onChangePersonID.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveUserManagement = this.saveUserManagement.bind(this);\n    this.newUserManagement = this.newUserManagement.bind(this);\n    this.state = {\n      person_id: \"\",\n      description: \"\",\n      published: false,\n      submitted: false\n    };\n  }\n\n  onChangePersonID(e) {\n    this.setState({\n      person_id: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      firstName: e.target.value\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      lastName: e.target.value\n    });\n  }\n\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value\n    });\n  }\n\n  onChangeGenderId(e) {\n    this.setState({\n      gender_id: e.target.value\n    });\n  }\n\n  onChangePronounId(e) {\n    this.setState({\n      pronoun_id: e.target.value\n    });\n  }\n\n  onChangeSexAtBirthId(e) {\n    this.setState({\n      sex_at_birth_id: e.target.value\n    });\n  }\n\n  onChangeStateId(e) {\n    this.setState({\n      state_id: e.target.value\n    });\n  }\n\n  onChangeBirthday(e) {\n    this.setState({\n      birthday: e.target.value\n    });\n  }\n\n  onChangeCity(e) {\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  onChangeZip(e) {\n    this.setState({\n      zip: e.target.value\n    });\n  }\n\n  saveUserManagement() {\n    var data = {\n      person_id: this.state.person_id,\n      description: this.state.description\n    };\n    UserManagementDataService.create(data).then(response => {\n      this.setState({\n        id: response.data.id,\n        person_id: response.data.person_id,\n        description: response.data.description,\n        published: response.data.published,\n        submitted: true\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  newUserManagement() {\n    this.setState({\n      id: null,\n      person_id: \"\",\n      description: \"\",\n      published: false,\n      submitted: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-form\",\n      children: this.state.submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"You submitted successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.newUserManagement,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"person_id\",\n            children: \"Person ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"person_id\",\n            required: true,\n            value: this.state.person_id,\n            onChange: this.onChangePersonID,\n            name: \"person_id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"description\",\n            required: true,\n            value: this.state.description,\n            onChange: this.onChangeDescription,\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.saveUserManagement,\n          className: \"btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jking4/Desktop/react/front-end/src/components/person-management-create.component.js"],"names":["React","Component","UserManagementDataService","UserManagementCreate","constructor","props","onChangePersonID","bind","onChangeDescription","saveUserManagement","newUserManagement","state","person_id","description","published","submitted","e","setState","target","value","onChangeEmail","email","onChangeFirstName","firstName","onChangeLastName","lastName","onChangeAddress","address","onChangeGenderId","gender_id","onChangePronounId","pronoun_id","onChangeSexAtBirthId","sex_at_birth_id","onChangeStateId","state_id","onChangeBirthday","birthday","onChangeCity","city","onChangeZip","zip","data","create","then","response","id","console","log","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport UserManagementDataService from \"../services/person-management.service\";\n\nexport default class UserManagementCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePersonID = this.onChangePersonID.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveUserManagement = this.saveUserManagement.bind(this);\n    this.newUserManagement = this.newUserManagement.bind(this);\n\n    this.state = {\n      person_id: \"\",\n      description: \"\", \n      published: false,\n      submitted: false\n    };\n  }\n\n  onChangePersonID(e) {\n    this.setState({\n      person_id: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangeFirstName(e){\n    this.setState({\n      firstName: e.target.value\n    });\n  }\n\n  onChangeLastName(e){\n    this.setState({\n      lastName: e.target.value\n    });\n  }\n\n  onChangeAddress(e){\n    this.setState({\n      address: e.target.value\n    });\n  }\n\n  onChangeGenderId(e){\n    this.setState({\n      gender_id: e.target.value\n    });\n  }\n\n  onChangePronounId(e){\n    this.setState({\n      pronoun_id: e.target.value\n    });\n  }\n\n  onChangeSexAtBirthId(e){\n    this.setState({\n      sex_at_birth_id: e.target.value\n    });\n  }\n\n  onChangeStateId(e){\n    this.setState({\n      state_id: e.target.value\n    });\n  }\n  \n  onChangeBirthday(e){\n    this.setState({\n      birthday: e.target.value\n    });\n  }\n\n  onChangeCity(e){\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  onChangeZip(e){\n    this.setState({\n      zip: e.target.value\n    });\n  }\n\n  saveUserManagement() {\n    var data = {\n      person_id: this.state.person_id,\n      description: this.state.description\n    };\n\n    UserManagementDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          person_id: response.data.person_id,\n          description: response.data.description,\n          published: response.data.published,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newUserManagement() {\n    this.setState({\n      id: null,\n      person_id: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newUserManagement}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"person_id\">Person ID</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"person_id\"\n                required\n                value={this.state.person_id}\n                onChange={this.onChangePersonID}\n                name=\"person_id\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <button onClick={this.saveUserManagement} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}