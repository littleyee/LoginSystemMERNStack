{"ast":null,"code":"var _jsxFileName = \"/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport { vrequired, vemail, vdate } from \"../common/validators\";\nimport { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\nimport MedicationManagementDataService from \"../services/medication-management.service\";\nimport MedicationService from \"../services/medication.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PersonManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePatientId = this.onChangePatientId.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.onChangeMedicationFrequencyId = this.onChangeMedicationFrequencyId.bind(this);\n    this.onChangeMedicationMeasurementId = this.onChangeMedicationMeasurementId.bind(this);\n    this.onChangePrescribedBy = this.onChangePrescribedBy.bind(this);\n    this.onChangePrescribedOn = this.onChangePrescribedOn.bind(this);\n    this.onChangePharmacyId = this.onChangePharmacyId.bind(this);\n    this.getMedicationManagement = this.getMedicationManagement.bind(this);\n    this.updateMedicationManagement = this.updateMedicationManagement.bind(this);\n    this.state = {\n      currentPersonManagement: {\n        patient_id: \"\",\n        medication_id: \"\",\n        amount: \"\",\n        medication_frequency_id: \"\",\n        medication_measurement_id: \"\",\n        prescribed_by: \"\",\n        prescribed_on: \"\",\n        pharmacy_id: \"\"\n      }\n    };\n  }\n\n  onChangeMedicationID(e) {\n    const medication_id = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentMedicationManagement: { ...prevState.currentMedicationManagement,\n          medication_id: medication_id\n        }\n      };\n    });\n  }\n\n  onChangeMedicationFrequencyId(e) {\n    const medication_frequency_id = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentMedicationManagement: { ...prevState.currentMedicationManagement,\n          medication_frequency_id: medication_frequency_id\n        }\n      };\n    });\n  }\n\n  onChangeMedicationMeasurementId(e) {\n    const medication_measurement_id = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentMedicationManagement: { ...prevState.currentMedicationManagement,\n          medication_measurement_id: medication_measurement_id\n        }\n      };\n    });\n  }\n\n  getMedicationManagement(medication_id) {\n    MedicationManagementDataService.get(medication_id).then(response => {\n      this.setState({\n        currentMedicationManagement: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateMedicationManagement(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      MedicationManagementDataService.update(this.state.currentMedicationManagement.medication_id, this.state.currentMedicationManagement).then(response => {\n        this.props.history.push('/medication-management');\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  } //   componentDidMount() {\n  //     this.getMedicationManagement(this.props.match.params.medication_id);\n  //     // get drop down information\n  //     MedicationService.getGenders().then(\n  //       response => {\n  //         this.setState({\n  //           genders: response.data.result\n  //         });\n  //       },\n  //       error => {\n  //         this.setState({\n  //           genders:\n  //             (error.response &&\n  //               error.response.data &&\n  //               error.response.data.message) ||\n  //             error.message ||\n  //             error.toString()\n  //         });\n  //       }\n  //     );\n  //     MedicationService.getPronouns().then(\n  //       response => {\n  //         this.setState({\n  //           pronouns: response.data.result\n  //         });\n  //       },\n  //       error => {\n  //         this.setState({\n  //           pronouns:\n  //             (error.response &&\n  //               error.response.data &&\n  //               error.response.data.message) ||\n  //             error.message ||\n  //             error.toString()\n  //         });\n  //       }\n  //     );\n  //     MedicationService.getSexAtBirths().then(\n  //       response => {console.log(response.data.result);\n  //         this.setState({\n  //           sexAtBirths: response.data.result\n  //         });\n  //       },\n  //       error => {\n  //         this.setState({\n  //           sexAtBirths:\n  //             (error.response &&\n  //               error.response.data &&\n  //               error.response.data.message) ||\n  //             error.message ||\n  //             error.toString()\n  //         });\n  //       }\n  //     );\n  //     MedicationService.getStates().then(\n  //       response => {\n  //         this.setState({\n  //           states: response.data.result\n  //         });\n  //       },\n  //       error => {\n  //         this.setState({\n  //           states:\n  //             (error.response &&\n  //               error.response.data &&\n  //               error.response.data.message) ||\n  //             error.message ||\n  //             error.toString()\n  //         });\n  //       }\n  //     );\n  //   }\n\n\n  render() {\n    const {\n      currentMedicationManagement\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentMedicationManagement ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Edit Medication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.updateMedicationManagement,\n          ref: c => {\n            this.form = c;\n          },\n          children: [!this.state.submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"medication_id\",\n                children: \"Medication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"medication_id\",\n                value: this.state.medication_id,\n                onChange: this.onChangeMedicationId // validations={[vrequired, vfirstName]}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"amount\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"amount\",\n                value: this.state.amount,\n                onChange: this.onChangeAmount // validations={[vrequired, vlastName]}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"medication_frequency_id\",\n                children: \"Medication Frequency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"email\",\n                value: this.state.medication_frequency_id,\n                onChange: this.onChangeMedicationFrequency // validations={[vrequired, vemail]}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"medication_measurement_id\",\n                children: \"Medication Measurement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"birthday\",\n                value: this.state.medication_measurement_id,\n                onChange: this.onChangeMedicationMeasurementId // validations={[vrequired, vdate]}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"prescribed_by\",\n                children: \"Prescribed By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"prescribed_by\",\n                value: this.state.prescribed_by,\n                onChange: this.onChangePrescribedBy // validations={[vrequired, vdate]}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"prescribed_on\",\n                children: \"Prescribed On\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"prescribed_on\",\n                value: this.state.prescribed_on,\n                onChange: this.onChangePrescribedOn // validations={[vrequired, vdate]}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pharmacy_id\",\n                children: \"Pharmacy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"pharmacy_id\",\n                value: this.state.pharmacy_id,\n                onChange: this.onChangePharmacyId // validations={[vrequired, vdate]}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary btn-block\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 19\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n              role: \"alert\",\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n            style: {\n              display: \"none\"\n            },\n            ref: c => {\n              this.checkBtn = c;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Could not find medication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management.component.js"],"names":["React","Component","Form","Input","Select","CheckButton","vrequired","vemail","vdate","vfirstName","vlastName","vaddress","vcity","vzip","MedicationManagementDataService","MedicationService","PersonManagement","constructor","props","onChangePatientId","bind","onChangeAmount","onChangeMedicationFrequencyId","onChangeMedicationMeasurementId","onChangePrescribedBy","onChangePrescribedOn","onChangePharmacyId","getMedicationManagement","updateMedicationManagement","state","currentPersonManagement","patient_id","medication_id","amount","medication_frequency_id","medication_measurement_id","prescribed_by","prescribed_on","pharmacy_id","onChangeMedicationID","e","target","value","setState","prevState","currentMedicationManagement","get","then","response","data","console","log","catch","preventDefault","message","loading","form","validateAll","checkBtn","context","_errors","length","update","history","push","window","location","reload","error","resMessage","toString","successful","render","c","submitted","onChangeMedicationId","onChangeMedicationFrequency","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport { vrequired, vemail, vdate } from \"../common/validators\";\nimport { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\n\nimport MedicationManagementDataService from \"../services/medication-management.service\";\nimport MedicationService from \"../services/medication.service\";\n\nexport default class PersonManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePatientId = this.onChangePatientId.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.onChangeMedicationFrequencyId = this.onChangeMedicationFrequencyId.bind(this);\n    this.onChangeMedicationMeasurementId = this.onChangeMedicationMeasurementId .bind(this);\n    this.onChangePrescribedBy = this.onChangePrescribedBy.bind(this);\n    this.onChangePrescribedOn= this.onChangePrescribedOn.bind(this);\n    this.onChangePharmacyId = this.onChangePharmacyId.bind(this);\n\n    this.getMedicationManagement = this.getMedicationManagement.bind(this);\n    this.updateMedicationManagement = this.updateMedicationManagement.bind(this);\n\n    this.state = {\n        currentPersonManagement:{patient_id: \"\",\n        medication_id: \"\",\n        amount: \"\",\n        medication_frequency_id: \"\",\n        medication_measurement_id: \"\",\n        prescribed_by: \"\",\n        prescribed_on: \"\",\n        pharmacy_id: \"\"}\n        \n    };\n     \n  }\n\n  onChangeMedicationID(e) {\n    const medication_id = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentMedicationManagement: {\n          ...prevState.currentMedicationManagement,\n          medication_id: medication_id\n        }\n      };\n    });\n  }\n\n  onChangeMedicationFrequencyId(e) {\n    const medication_frequency_id = e.target.value;\n    this.setState(function(prevState) {\n      return {\n        currentMedicationManagement: {\n          ...prevState.currentMedicationManagement,\n          medication_frequency_id:medication_frequency_id\n        }\n      };\n    });\n  }\n\n  onChangeMedicationMeasurementId(e) {\n    const medication_measurement_id = e.target.value;\n    this.setState(function(prevState) {\n      return {\n        currentMedicationManagement: {\n          ...prevState.currentMedicationManagement,\n          medication_measurement_id:medication_measurement_id\n        }\n      };\n    });\n  }\n\n\n  getMedicationManagement(medication_id) {\n    MedicationManagementDataService.get(medication_id)\n      .then(response => {\n        this.setState({\n          currentMedicationManagement: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateMedicationManagement(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      MedicationManagementDataService.update(\n        this.state.currentMedicationManagement.medication_id,\n        this.state.currentMedicationManagement\n      ).then(\n        response => {\n          this.props.history.push('/medication-management')\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    }\n  }\n\n//   componentDidMount() {\n//     this.getMedicationManagement(this.props.match.params.medication_id);\n    \n//     // get drop down information\n//     MedicationService.getGenders().then(\n//       response => {\n//         this.setState({\n//           genders: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           genders:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//     MedicationService.getPronouns().then(\n//       response => {\n//         this.setState({\n//           pronouns: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           pronouns:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//     MedicationService.getSexAtBirths().then(\n//       response => {console.log(response.data.result);\n//         this.setState({\n//           sexAtBirths: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           sexAtBirths:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//     MedicationService.getStates().then(\n//       response => {\n//         this.setState({\n//           states: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           states:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//   }\n\n  render() {\n    const { currentMedicationManagement } = this.state;\n\n    return (\n      <div>\n        {currentMedicationManagement ? (\n          <div className=\"edit-form\">\n            <h4>Edit Medication</h4>\n              <Form\n                onSubmit={this.updateMedicationManagement}\n                ref={c => {\n                  this.form = c;\n                }}\n              >\n                {!this.state.submitted && (\n                  <div>\n                      <div className=\"form-group\">\n                  <label htmlFor=\"medication_id\">Medication</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"medication_id\"\n                    value={this.state.medication_id}\n                    onChange={this.onChangeMedicationId}\n                    // validations={[vrequired, vfirstName]}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"amount\">Amount</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"amount\"\n                    value={this.state.amount}\n                    onChange={this.onChangeAmount}\n                    // validations={[vrequired, vlastName]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_frequency_id\">Medication Frequency</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.medication_frequency_id}\n                    onChange={this.onChangeMedicationFrequency}\n                    // validations={[vrequired, vemail]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_measurement_id\">Medication Measurement</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"birthday\"\n                    value={this.state.medication_measurement_id}\n                    onChange={this.onChangeMedicationMeasurementId}\n                    // validations={[vrequired, vdate]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"prescribed_by\">Prescribed By</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"prescribed_by\"\n                    value={this.state.prescribed_by}\n                    onChange={this.onChangePrescribedBy}\n                    // validations={[vrequired, vdate]}\n                  />\n                </div>\n \n                <div className=\"form-group\">\n                  <label htmlFor=\"prescribed_on\">Prescribed On</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"prescribed_on\"\n                    value={this.state.prescribed_on}\n                    onChange={this.onChangePrescribedOn}\n                    // validations={[vrequired, vdate]}\n                  />\n                </div>\n             \n\n                <div className=\"form-group\">\n                  <label htmlFor=\"pharmacy_id\">Pharmacy</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"pharmacy_id\"\n                    value={this.state.pharmacy_id}\n                    onChange={this.onChangePharmacyId}\n                    // validations={[vrequired, vdate]}\n                  />\n                </div>\n\n\n                    <div className=\"form-group\">\n                      <button className=\"btn btn-primary btn-block\">Save</button>\n                    </div>\n                  </div>\n                )}\n\n                {this.state.message && (\n                  <div className=\"form-group\">\n                    <div\n                      className={\n                        this.state.successful\n                          ? \"alert alert-success\"\n                          : \"alert alert-danger\"\n                      }\n                      role=\"alert\"\n                    >\n                      {this.state.message}\n                    </div>\n                  </div>\n                )}\n                <CheckButton\n                  style={{ display: \"none\" }}\n                  ref={c => {\n                    this.checkBtn = c;\n                  }}\n                />\n              </Form>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Could not find medication</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}