{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = 'http://localhost:8000/api/user/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', {\n      headers: authHeader()\n    });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', {\n      headers: authHeader()\n    });\n  }\n\n  getGenders() {\n    return axios.get(API_URL + 'getGenders');\n  }\n\n  getPronouns() {\n    return axios.get(API_URL + 'getPronouns');\n  }\n\n  getSexAtBirths() {\n    return axios.get(API_URL + 'getSexAtBirths');\n  }\n\n  getStates() {\n    return axios.get(API_URL + 'getStates');\n  }\n\n  profileEdit(username, email, firstName, lastName, address, birthday, gender_id, pronoun_id, sex_at_birth_id, state_id, city, zip) {\n    return axios.post(API_URL + \"profile/edit\", {\n      username,\n      email,\n      firstName,\n      lastName,\n      address,\n      birthday,\n      gender_id,\n      pronoun_id,\n      sex_at_birth_id,\n      state_id,\n      city,\n      zip\n    }).then(response => {\n      // combine old and new user data\n      var user = JSON.parse(localStorage.getItem(\"user\"));\n      user = { ...user,\n        ...response.data\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      return response.data;\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/jking4/Desktop/react-login/front-end/src/services/user.service.js"],"names":["axios","authHeader","API_URL","UserService","getPublicContent","get","getUserBoard","headers","getModeratorBoard","getAdminBoard","getGenders","getPronouns","getSexAtBirths","getStates","profileEdit","username","email","firstName","lastName","address","birthday","gender_id","pronoun_id","sex_at_birth_id","state_id","city","zip","post","then","response","user","JSON","parse","localStorage","getItem","data","setItem","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,gBAAgB,GAAG;AACjB,WAAOJ,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,KAApB,CAAP;AACD;;AAEDI,EAAAA,YAAY,GAAG;AACb,WAAON,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,MAApB,EAA4B;AAAEK,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA5B,CAAP;AACD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,WAAOR,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,KAApB,EAA2B;AAAEK,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA3B,CAAP;AACD;;AAEDQ,EAAAA,aAAa,GAAG;AACd,WAAOT,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,OAApB,EAA6B;AAAEK,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA7B,CAAP;AACD;;AAKDS,EAAAA,UAAU,GAAG;AACX,WAAOV,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,YAApB,CAAP;AACD;;AACDS,EAAAA,WAAW,GAAG;AACZ,WAAOX,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,aAApB,CAAP;AACD;;AACDU,EAAAA,cAAc,GAAG;AACf,WAAOZ,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,gBAApB,CAAP;AACD;;AACDW,EAAAA,SAAS,GAAG;AACV,WAAOb,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,WAApB,CAAP;AACD;;AAGDY,EAAAA,WAAW,CACTC,QADS,EAETC,KAFS,EAGTC,SAHS,EAITC,QAJS,EAKTC,OALS,EAMTC,QANS,EAOTC,SAPS,EAQTC,UARS,EASTC,eATS,EAUTC,QAVS,EAWTC,IAXS,EAYTC,GAZS,EAYJ;AACL,WAAO1B,KAAK,CACT2B,IADI,CACCzB,OAAO,GAAG,cADX,EAC2B;AAC9Ba,MAAAA,QAD8B;AAE9BC,MAAAA,KAF8B;AAG9BC,MAAAA,SAH8B;AAI9BC,MAAAA,QAJ8B;AAK9BC,MAAAA,OAL8B;AAM9BC,MAAAA,QAN8B;AAO9BC,MAAAA,SAP8B;AAQ9BC,MAAAA,UAR8B;AAS9BC,MAAAA,eAT8B;AAU9BC,MAAAA,QAV8B;AAW9BC,MAAAA,IAX8B;AAY9BC,MAAAA;AAZ8B,KAD3B,EAeJE,IAfI,CAeCC,QAAQ,IAAI;AAChB;AACA,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACAJ,MAAAA,IAAI,GAAG,EAAC,GAAGA,IAAJ;AAAU,WAAGD,QAAQ,CAACM;AAAtB,OAAP;AACAF,MAAAA,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACM,SAAL,CAAeP,IAAf,CAA7B;AAEA,aAAOD,QAAQ,CAACM,IAAhB;AACD,KAtBI,CAAP;AAuBD;;AAtEe;;AAyElB,eAAe,IAAIhC,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8000/api/user/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n\r\n\r\n  \r\n  getGenders() {\r\n    return axios.get(API_URL + 'getGenders');\r\n  }\r\n  getPronouns() {\r\n    return axios.get(API_URL + 'getPronouns');\r\n  }\r\n  getSexAtBirths() {\r\n    return axios.get(API_URL + 'getSexAtBirths');\r\n  }\r\n  getStates() {\r\n    return axios.get(API_URL + 'getStates');\r\n  }\r\n\r\n\r\n  profileEdit(\r\n    username,\r\n    email,\r\n    firstName,\r\n    lastName,\r\n    address,\r\n    birthday,\r\n    gender_id,\r\n    pronoun_id,\r\n    sex_at_birth_id,\r\n    state_id,\r\n    city,\r\n    zip) {\r\n    return axios\r\n      .post(API_URL + \"profile/edit\", {\r\n        username,\r\n        email,\r\n        firstName,\r\n        lastName,\r\n        address,\r\n        birthday,\r\n        gender_id,\r\n        pronoun_id,\r\n        sex_at_birth_id,\r\n        state_id,\r\n        city,\r\n        zip\r\n      })\r\n      .then(response => {\r\n        // combine old and new user data\r\n        var user = JSON.parse(localStorage.getItem(\"user\"));\r\n        user = {...user, ...response.data};\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n}\r\n\r\nexport default new UserService();"]},"metadata":{},"sourceType":"module"}