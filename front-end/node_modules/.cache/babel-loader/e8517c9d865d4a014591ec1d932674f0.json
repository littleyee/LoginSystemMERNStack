{"ast":null,"code":"// import React, { Component } from \"react\";\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Select from \"react-validation/build/select\";\n// import CheckButton from \"react-validation/build/button\";\n// import { vrequired, vemail, vdate } from \"../common/validators\";\n// import { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\n// import MedicationManagementDataService from \"../services/medication-management.service\";\n// import PersonManagementDataService from \"../services/person-management.service\";\n// import PersonService from \"../services/person.service\";\n// export default class PersonManagement extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.onChangePersonID = this.onChangePersonID.bind(this);\n//     this.onChangeEmail = this.onChangeEmail.bind(this);\n//     this.onChangeFirstName = this.onChangeFirstName.bind(this);\n//     this.onChangeLastName = this.onChangeLastName.bind(this);\n//     this.onChangeAddress = this.onChangeAddress.bind(this);\n//     this.onChangeGenderId = this.onChangeGenderId.bind(this);\n//     this.onChangePronounId = this.onChangePronounId.bind(this);\n//     this.onChangeSexAtBirthId = this.onChangeSexAtBirthId.bind(this);\n//     this.onChangeStateId = this.onChangeStateId.bind(this);\n//     this.onChangeBirthday = this.onChangeBirthday.bind(this);\n//     this.onChangeCity = this.onChangeCity.bind(this);\n//     this.onChangeZip = this.onChangeZip.bind(this);\n//     this.getPersonManagement = this.getPersonManagement.bind(this);\n//     this.updatePersonManagement = this.updatePersonManagement.bind(this);\n//     this.state = {\n//       currentPersonManagement: {\n//         person_id: \"\",\n//         email: \"\",\n//         firstName: \"\",\n//         lastName: \"\",\n//         address: \"\",\n//         sex_at_birth_id: \"\",\n//         gender_id: \"\",\n//         pronoun_id: \"\",\n//         state_id: \"\",\n//         birthday: \"\",\n//         city: \"\",\n//         zip: \"\",\n//       },\n//       message: \"\",\n//       submitted: false,\n//       // dropdown options\n//       genders: [],\n//       pronouns: [],\n//       sexAtBirths: [],\n//       states: [],\n//     };\n//   }\n//   onChangePersonID(e) {\n//     const person_id = e.target.value;\n//     this.setState(function(prevState) {\n//       return {\n//         currentPersonManagement: {\n//           ...prevState.currentPersonManagement,\n//           person_id: person_id\n//         }\n//       };\n//     });\n//   }\n//   onChangeEmail(e) {\n//     const email = e.target.value;   \n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         email: email\n//       }\n//     }));\n//   }\n//   onChangeFirstName(e) {\n//     const firstName = e.target.value;   \n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         firstName: firstName\n//       }\n//     }));\n//   }\n//   onChangeLastName(e) {\n//     const lastName = e.target.value;   \n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         lastName: lastName\n//       }\n//     }));\n//   }\n//   onChangeAddress(e) {\n//     const address = e.target.value;   \n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         address: address\n//       }\n//     }));\n//   }\n//   onChangeGenderId(e) {\n//     const sex_at_birth_id = e.target.value;   \n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         sex_at_birth_id: sex_at_birth_id\n//       }\n//     }));\n//   }\n//   onChangePronounId(e) {\n//     const gender_id = e.target.value;   \n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         gender_id: gender_id\n//       }\n//     }));\n//   }\n//   onChangeSexAtBirthId(e) {\n//     const pronoun_id = e.target.value;   \n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         pronoun_id: pronoun_id\n//       }\n//     }));\n//   }\n//   onChangeStateId(e) {\n//     const state_id = e.target.value;   \n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         state_id: state_id\n//       }\n//     }));\n//   }\n//   onChangeBirthday(e) {\n//     const birthday = e.target.value;   \n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         birthday: birthday\n//       }\n//     }));\n//   }\n//   onChangeCity(e) {\n//     const city = e.target.value;   \n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         city: city\n//       }\n//     }));\n//   }\n//   onChangeZip(e) {\n//     const zip = e.target.value;   \n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         zip: zip\n//       }\n//     }));\n//   }\n//   getPersonManagement(person_id) {\n//     PersonManagementDataService.get(person_id)\n//       .then(response => {\n//         this.setState({\n//           currentPersonManagement: response.data\n//         });\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n//   updatePersonManagement(e) {\n//     e.preventDefault();\n//     this.setState({\n//       message: \"\",\n//       loading: true\n//     });\n//     this.form.validateAll();\n//     if (this.checkBtn.context._errors.length === 0) {\n//       PersonManagementDataService.update(\n//         this.state.currentPersonManagement.person_id,\n//         this.state.currentPersonManagement\n//       ).then(\n//         response => {\n//           this.props.history.push('/person-management')\n//           window.location.reload();\n//         },\n//         error => {\n//           const resMessage =\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString();\n//           this.setState({\n//             successful: false,\n//             message: resMessage\n//           });\n//         })\n//         .catch(e => {\n//           console.log(e);\n//         });\n//     }\n//   }\n//   componentDidMount() {\n//     this.getPersonManagement(this.props.match.params.person_id);\n//     // get drop down information\n//     PersonService.getGenders().then(\n//       response => {\n//         this.setState({\n//           genders: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           genders:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//     PersonService.getPronouns().then(\n//       response => {\n//         this.setState({\n//           pronouns: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           pronouns:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//     PersonService.getSexAtBirths().then(\n//       response => {console.log(response.data.result);\n//         this.setState({\n//           sexAtBirths: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           sexAtBirths:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//     PersonService.getStates().then(\n//       response => {\n//         this.setState({\n//           states: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           states:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//   }\n//   render() {\n//     const { currentPersonManagement } = this.state;\n//     return (\n//       <div>\n//         {currentPersonManagement ? (\n//           <div className=\"edit-form\">\n//             <h4>Edit User</h4>\n//               <Form\n//                 onSubmit={this.updatePersonManagement}\n//                 ref={c => {\n//                   this.form = c;\n//                 }}\n//               >\n//                 {!this.state.submitted && (\n//                   <div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"email\">Email</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"email\"\n//                         value={currentPersonManagement.email}\n//                         onChange={this.onChangeEmail}\n//                         validations={[vrequired, vemail]}\n//                       />\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"firstName\">FirstName</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"firstName\"\n//                         value={currentPersonManagement.firstName}\n//                         onChange={this.onChangeFirstName}\n//                         validations={[vrequired, vfirstName]}\n//                       />\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"lastName\">LastName</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"lastName\"\n//                         value={currentPersonManagement.lastName}\n//                         onChange={this.onChangeLastName}\n//                         validations={[vrequired, vlastName]}\n//                       />\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"birthday\">Birthday</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"birthday\"\n//                         value={currentPersonManagement.birthday}\n//                         onChange={this.onChangeBirthday}\n//                         validations={[vrequired, vdate]}\n//                       />\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"gender_id\">Gender</label>\n//                       <Select\n//                         value={currentPersonManagement.gender_id}\n//                         onChange={this.onChangeGenderId}\n//                         validations={[vrequired]}\n//                       >\n//                         <option value=\"\">Select One</option>\n//                         {this.state.genders.length > 0 &&\n//                           this.state.genders.map(item => (\n//                             <option key={item.gender_id} value={item.gender_id}>\n//                               {item.gender}\n//                             </option>\n//                           ))}\n//                       </Select>\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"pronoun_id\">Pronoun</label>\n//                       <Select\n//                         value={currentPersonManagement.pronoun_id}\n//                         onChange={this.onChangePronounId}\n//                         validations={[vrequired]}\n//                       >\n//                         <option value=\"\">Select One</option>\n//                         {this.state.pronouns.length > 0 &&\n//                           this.state.pronouns.map(item => (\n//                             <option key={item.pronoun_id} value={item.pronoun_id}>\n//                               {item.pronoun}\n//                             </option>\n//                           ))}\n//                       </Select>\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"sex_at_birth_id\">Sex At Birth</label>\n//                       <Select\n//                         value={currentPersonManagement.sex_at_birth_id}\n//                         onChange={this.onChangeSexAtBirthId}\n//                         validations={[vrequired]}\n//                       >\n//                         <option value=\"\">Select One</option>\n//                         {this.state.sexAtBirths.length > 0 &&\n//                           this.state.sexAtBirths.map(item => (\n//                             <option key={item.sex_at_birth_id} value={item.sex_at_birth_id}>\n//                               {item.sex_at_birth}\n//                             </option>\n//                           ))}\n//                       </Select>\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"address\">Address</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"address\"\n//                         value={currentPersonManagement.address}\n//                         onChange={this.onChangeAddress}\n//                         validations={[vrequired, vaddress]}\n//                       />\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"city\">City</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"city\"\n//                         value={currentPersonManagement.city}\n//                         onChange={this.onChangeCity}\n//                         validations={[vrequired, vcity]}\n//                       />\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"state_id\">State</label>\n//                       <Select\n//                         value={currentPersonManagement.state_id}\n//                         onChange={this.onChangeStateId}\n//                         validations={[vrequired]}\n//                       >\n//                         <option value=\"\">Select One</option>\n//                         {this.state.states.length > 0 &&\n//                           this.state.states.map(item => (\n//                             <option key={item.state_id} value={item.state_id}>\n//                               {item.state}\n//                             </option>\n//                           ))}\n//                       </Select>\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"zip\">Zip</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"zip\"\n//                         value={currentPersonManagement.zip}\n//                         onChange={this.onChangeZip}\n//                         validations={[vrequired, vzip]}\n//                       />\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <button className=\"btn btn-primary btn-block\">Save</button>\n//                     </div>\n//                   </div>\n//                 )}\n//                 {this.state.message && (\n//                   <div className=\"form-group\">\n//                     <div\n//                       className={\n//                         this.state.successful\n//                           ? \"alert alert-success\"\n//                           : \"alert alert-danger\"\n//                       }\n//                       role=\"alert\"\n//                     >\n//                       {this.state.message}\n//                     </div>\n//                   </div>\n//                 )}\n//                 <CheckButton\n//                   style={{ display: \"none\" }}\n//                   ref={c => {\n//                     this.checkBtn = c;\n//                   }}\n//                 />\n//               </Form>\n//           </div>\n//         ) : (\n//           <div>\n//             <br />\n//             <p>Could not find user</p>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management.component.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from \"react\";\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Select from \"react-validation/build/select\";\n// import CheckButton from \"react-validation/build/button\";\n// import { vrequired, vemail, vdate } from \"../common/validators\";\n// import { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\n\n// import MedicationManagementDataService from \"../services/medication-management.service\";\n// import PersonManagementDataService from \"../services/person-management.service\";\n// import PersonService from \"../services/person.service\";\n\n// export default class PersonManagement extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.onChangePersonID = this.onChangePersonID.bind(this);\n//     this.onChangeEmail = this.onChangeEmail.bind(this);\n//     this.onChangeFirstName = this.onChangeFirstName.bind(this);\n//     this.onChangeLastName = this.onChangeLastName.bind(this);\n//     this.onChangeAddress = this.onChangeAddress.bind(this);\n//     this.onChangeGenderId = this.onChangeGenderId.bind(this);\n//     this.onChangePronounId = this.onChangePronounId.bind(this);\n//     this.onChangeSexAtBirthId = this.onChangeSexAtBirthId.bind(this);\n//     this.onChangeStateId = this.onChangeStateId.bind(this);\n//     this.onChangeBirthday = this.onChangeBirthday.bind(this);\n//     this.onChangeCity = this.onChangeCity.bind(this);\n//     this.onChangeZip = this.onChangeZip.bind(this);\n\n//     this.getPersonManagement = this.getPersonManagement.bind(this);\n//     this.updatePersonManagement = this.updatePersonManagement.bind(this);\n\n//     this.state = {\n//       currentPersonManagement: {\n//         person_id: \"\",\n\n//         email: \"\",\n//         firstName: \"\",\n//         lastName: \"\",\n//         address: \"\",\n//         sex_at_birth_id: \"\",\n//         gender_id: \"\",\n//         pronoun_id: \"\",\n//         state_id: \"\",\n//         birthday: \"\",\n//         city: \"\",\n//         zip: \"\",\n//       },\n//       message: \"\",\n//       submitted: false,\n  \n//       // dropdown options\n//       genders: [],\n//       pronouns: [],\n//       sexAtBirths: [],\n//       states: [],\n//     };\n//   }\n\n//   onChangePersonID(e) {\n//     const person_id = e.target.value;\n\n//     this.setState(function(prevState) {\n//       return {\n//         currentPersonManagement: {\n//           ...prevState.currentPersonManagement,\n//           person_id: person_id\n//         }\n//       };\n//     });\n//   }\n\n//   onChangeEmail(e) {\n//     const email = e.target.value;   \n\n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         email: email\n//       }\n//     }));\n//   }\n\n//   onChangeFirstName(e) {\n//     const firstName = e.target.value;   \n\n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         firstName: firstName\n//       }\n//     }));\n//   }\n\n//   onChangeLastName(e) {\n//     const lastName = e.target.value;   \n\n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         lastName: lastName\n//       }\n//     }));\n//   }\n\n//   onChangeAddress(e) {\n//     const address = e.target.value;   \n\n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         address: address\n//       }\n//     }));\n//   }\n\n//   onChangeGenderId(e) {\n//     const sex_at_birth_id = e.target.value;   \n\n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         sex_at_birth_id: sex_at_birth_id\n//       }\n//     }));\n//   }\n\n//   onChangePronounId(e) {\n//     const gender_id = e.target.value;   \n\n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         gender_id: gender_id\n//       }\n//     }));\n//   }\n\n//   onChangeSexAtBirthId(e) {\n//     const pronoun_id = e.target.value;   \n\n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         pronoun_id: pronoun_id\n//       }\n//     }));\n//   }\n\n//   onChangeStateId(e) {\n//     const state_id = e.target.value;   \n\n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         state_id: state_id\n//       }\n//     }));\n//   }\n\n//   onChangeBirthday(e) {\n//     const birthday = e.target.value;   \n\n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         birthday: birthday\n//       }\n//     }));\n//   }\n\n//   onChangeCity(e) {\n//     const city = e.target.value;   \n\n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         city: city\n//       }\n//     }));\n//   }\n\n//   onChangeZip(e) {\n//     const zip = e.target.value;   \n\n//     this.setState(prevState => ({\n//       currentPersonManagement: {\n//         ...prevState.currentPersonManagement,\n//         zip: zip\n//       }\n//     }));\n//   }\n\n//   getPersonManagement(person_id) {\n//     PersonManagementDataService.get(person_id)\n//       .then(response => {\n//         this.setState({\n//           currentPersonManagement: response.data\n//         });\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n//   updatePersonManagement(e) {\n//     e.preventDefault();\n\n//     this.setState({\n//       message: \"\",\n//       loading: true\n//     });\n\n//     this.form.validateAll();\n\n//     if (this.checkBtn.context._errors.length === 0) {\n//       PersonManagementDataService.update(\n//         this.state.currentPersonManagement.person_id,\n//         this.state.currentPersonManagement\n//       ).then(\n//         response => {\n//           this.props.history.push('/person-management')\n//           window.location.reload();\n//         },\n//         error => {\n//           const resMessage =\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString();\n\n//           this.setState({\n//             successful: false,\n//             message: resMessage\n//           });\n//         })\n//         .catch(e => {\n//           console.log(e);\n//         });\n//     }\n//   }\n\n//   componentDidMount() {\n//     this.getPersonManagement(this.props.match.params.person_id);\n    \n//     // get drop down information\n//     PersonService.getGenders().then(\n//       response => {\n//         this.setState({\n//           genders: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           genders:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//     PersonService.getPronouns().then(\n//       response => {\n//         this.setState({\n//           pronouns: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           pronouns:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//     PersonService.getSexAtBirths().then(\n//       response => {console.log(response.data.result);\n//         this.setState({\n//           sexAtBirths: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           sexAtBirths:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//     PersonService.getStates().then(\n//       response => {\n//         this.setState({\n//           states: response.data.result\n//         });\n//       },\n//       error => {\n//         this.setState({\n//           states:\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString()\n//         });\n//       }\n//     );\n//   }\n\n//   render() {\n//     const { currentPersonManagement } = this.state;\n\n//     return (\n//       <div>\n//         {currentPersonManagement ? (\n//           <div className=\"edit-form\">\n//             <h4>Edit User</h4>\n//               <Form\n//                 onSubmit={this.updatePersonManagement}\n//                 ref={c => {\n//                   this.form = c;\n//                 }}\n//               >\n//                 {!this.state.submitted && (\n//                   <div>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"email\">Email</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"email\"\n//                         value={currentPersonManagement.email}\n//                         onChange={this.onChangeEmail}\n//                         validations={[vrequired, vemail]}\n//                       />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"firstName\">FirstName</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"firstName\"\n//                         value={currentPersonManagement.firstName}\n//                         onChange={this.onChangeFirstName}\n//                         validations={[vrequired, vfirstName]}\n//                       />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"lastName\">LastName</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"lastName\"\n//                         value={currentPersonManagement.lastName}\n//                         onChange={this.onChangeLastName}\n//                         validations={[vrequired, vlastName]}\n//                       />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"birthday\">Birthday</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"birthday\"\n//                         value={currentPersonManagement.birthday}\n//                         onChange={this.onChangeBirthday}\n//                         validations={[vrequired, vdate]}\n//                       />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"gender_id\">Gender</label>\n//                       <Select\n//                         value={currentPersonManagement.gender_id}\n//                         onChange={this.onChangeGenderId}\n//                         validations={[vrequired]}\n//                       >\n//                         <option value=\"\">Select One</option>\n//                         {this.state.genders.length > 0 &&\n//                           this.state.genders.map(item => (\n//                             <option key={item.gender_id} value={item.gender_id}>\n//                               {item.gender}\n//                             </option>\n//                           ))}\n//                       </Select>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"pronoun_id\">Pronoun</label>\n//                       <Select\n//                         value={currentPersonManagement.pronoun_id}\n//                         onChange={this.onChangePronounId}\n//                         validations={[vrequired]}\n//                       >\n//                         <option value=\"\">Select One</option>\n//                         {this.state.pronouns.length > 0 &&\n//                           this.state.pronouns.map(item => (\n//                             <option key={item.pronoun_id} value={item.pronoun_id}>\n//                               {item.pronoun}\n//                             </option>\n//                           ))}\n//                       </Select>\n//                     </div>\n                    \n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"sex_at_birth_id\">Sex At Birth</label>\n//                       <Select\n//                         value={currentPersonManagement.sex_at_birth_id}\n//                         onChange={this.onChangeSexAtBirthId}\n//                         validations={[vrequired]}\n//                       >\n//                         <option value=\"\">Select One</option>\n//                         {this.state.sexAtBirths.length > 0 &&\n//                           this.state.sexAtBirths.map(item => (\n//                             <option key={item.sex_at_birth_id} value={item.sex_at_birth_id}>\n//                               {item.sex_at_birth}\n//                             </option>\n//                           ))}\n//                       </Select>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"address\">Address</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"address\"\n//                         value={currentPersonManagement.address}\n//                         onChange={this.onChangeAddress}\n//                         validations={[vrequired, vaddress]}\n//                       />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"city\">City</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"city\"\n//                         value={currentPersonManagement.city}\n//                         onChange={this.onChangeCity}\n//                         validations={[vrequired, vcity]}\n//                       />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"state_id\">State</label>\n//                       <Select\n//                         value={currentPersonManagement.state_id}\n//                         onChange={this.onChangeStateId}\n//                         validations={[vrequired]}\n//                       >\n//                         <option value=\"\">Select One</option>\n//                         {this.state.states.length > 0 &&\n//                           this.state.states.map(item => (\n//                             <option key={item.state_id} value={item.state_id}>\n//                               {item.state}\n//                             </option>\n//                           ))}\n//                       </Select>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"zip\">Zip</label>\n//                       <Input\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         name=\"zip\"\n//                         value={currentPersonManagement.zip}\n//                         onChange={this.onChangeZip}\n//                         validations={[vrequired, vzip]}\n//                       />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <button className=\"btn btn-primary btn-block\">Save</button>\n//                     </div>\n//                   </div>\n//                 )}\n\n//                 {this.state.message && (\n//                   <div className=\"form-group\">\n//                     <div\n//                       className={\n//                         this.state.successful\n//                           ? \"alert alert-success\"\n//                           : \"alert alert-danger\"\n//                       }\n//                       role=\"alert\"\n//                     >\n//                       {this.state.message}\n//                     </div>\n//                   </div>\n//                 )}\n//                 <CheckButton\n//                   style={{ display: \"none\" }}\n//                   ref={c => {\n//                     this.checkBtn = c;\n//                   }}\n//                 />\n//               </Form>\n//           </div>\n//         ) : (\n//           <div>\n//             <br />\n//             <p>Could not find user</p>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}