{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jking4\\\\Desktop\\\\react\\\\front-end\\\\src\\\\components\\\\person-management.component.js\";\nimport React, { Component } from \"react\";\nimport PersonManagementDataService from \"../services/person-management.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PersonManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePersonID = this.onChangePersonID.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getPersonManagement = this.getPersonManagement.bind(this);\n    this.updatePersonManagement = this.updatePersonManagement.bind(this);\n    this.deletePersonManagement = this.deletePersonManagement.bind(this);\n    this.state = {\n      currentPersonManagement: {\n        person_id: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getPersonManagement(this.props.match.params.person_id);\n  }\n\n  onChangePersonID(e) {\n    const person_id = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentPersonManagement: { ...prevState.currentPersonManagement,\n          person_id: person_id\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    this.setState(prevState => ({\n      currentPersonManagement: { ...prevState.currentPersonManagement,\n        description: description\n      }\n    }));\n  }\n\n  getPersonManagement(person_id) {\n    PersonManagementDataService.get(person_id).then(response => {\n      this.setState({\n        currentPersonManagement: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updatePersonManagement() {\n    PersonManagementDataService.update(this.state.currentPersonManagement.person_id, this.state.currentPersonManagement).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The person was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  deletePersonManagement() {\n    PersonManagementDataService.delete(this.state.currentPersonManagement.person_id).then(response => {\n      console.log(response.data);\n      this.props.history.push('/person-management');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      currentPersonManagement\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentPersonManagement ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"person_id\",\n              children: \"PersonID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"person_id\",\n              value: currentPersonManagement.person_id,\n              onChange: this.onChangePersonID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"description\",\n              value: currentPersonManagement.description,\n              onChange: this.onChangeDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), currentPersonManagement.published ? \"Published\" : \"Pending\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), currentPersonManagement.published ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-block\",\n          onClick: () => this.updatePublished(false),\n          children: \"UnPublish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-block\",\n          onClick: () => this.updatePublished(true),\n          children: \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-block\",\n          onClick: this.deletePersonManagement,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-block\",\n          onClick: this.updatePersonManagement,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please click on a User...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jking4/Desktop/react/front-end/src/components/person-management.component.js"],"names":["React","Component","PersonManagementDataService","PersonManagement","constructor","props","onChangePersonID","bind","onChangeDescription","getPersonManagement","updatePersonManagement","deletePersonManagement","state","currentPersonManagement","person_id","description","published","message","componentDidMount","match","params","e","target","value","setState","prevState","get","then","response","data","console","log","catch","update","delete","history","push","render","updatePublished"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PersonManagementDataService from \"../services/person-management.service\";\n\nexport default class PersonManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePersonID = this.onChangePersonID.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getPersonManagement = this.getPersonManagement.bind(this);\n    this.updatePersonManagement = this.updatePersonManagement.bind(this);\n    this.deletePersonManagement = this.deletePersonManagement.bind(this);\n\n    this.state = {\n      currentPersonManagement: {\n        person_id: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getPersonManagement(this.props.match.params.person_id);\n  }\n\n  onChangePersonID(e) {\n    const person_id = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentPersonManagement: {\n          ...prevState.currentPersonManagement,\n          person_id: person_id\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    \n    this.setState(prevState => ({\n      currentPersonManagement: {\n        ...prevState.currentPersonManagement,\n        description: description\n      }\n    }));\n  }\n\n  getPersonManagement(person_id) {\n    PersonManagementDataService.get(person_id)\n      .then(response => {\n        this.setState({\n          currentPersonManagement: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updatePersonManagement() {\n    PersonManagementDataService.update(\n      this.state.currentPersonManagement.person_id,\n      this.state.currentPersonManagement\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The person was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deletePersonManagement() {    \n    PersonManagementDataService.delete(this.state.currentPersonManagement.person_id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/person-management')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentPersonManagement } = this.state;\n\n    return (\n      <div>\n        {currentPersonManagement ? (\n          <div className=\"edit-form\">\n            <h4>Edit User</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"person_id\">PersonID</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"person_id\"\n                  value={currentPersonManagement.person_id}\n                  onChange={this.onChangePersonID}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  value={currentPersonManagement.description}\n                  onChange={this.onChangeDescription}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentPersonManagement.published ? \"Published\" : \"Pending\"}\n              </div>\n            </form>\n\n            {currentPersonManagement.published ? (\n              <button\n                className=\"btn btn-primary btn-block\"\n                onClick={() => this.updatePublished(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              <button\n                className=\"btn btn-primary btn-block\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Publish\n              </button>\n            )}\n\n            <button\n              className=\"btn btn-primary btn-block\"\n              onClick={this.deletePersonManagement}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary btn-block\"\n              onClick={this.updatePersonManagement}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a User...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}