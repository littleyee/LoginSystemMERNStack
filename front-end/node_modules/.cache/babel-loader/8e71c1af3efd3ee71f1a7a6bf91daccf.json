{"ast":null,"code":"var _jsxFileName = \"/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management-create.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport { vrequired, vemail, vdate } from \"../common/validators\";\nimport { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\nimport MedicationManagementDataService from \"../services/medication-management.service\"; // import MedicationService from \"../services/medication.service\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MedicationManagementCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.saveMedicationManagement = this.saveMedicationManagement.bind(this); // this.onChangePatientId = this.onChangePatientId.bind(this);\n\n    this.onChangeMedicationId = this.onChangeMedicationId.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.onChangeMedicationFrequencyId = this.onChangeMedicationFrequencyId.bind(this);\n    this.onChangeMedicationMeasurementId = this.onChangeMedicationMeasurementId.bind(this);\n    this.onChangePrescribedBy = this.onChangePrescribedBy.bind(this);\n    this.onChangePrescribedOn = this.onChangePrescribedOn.bind(this);\n    this.onChangePharmacyId = this.onChangePharmacyId.bind(this);\n    this.state = {\n      patient_id: 1,\n      // hard coded but should be either a dropdown or passed from personManagement/Profile\n      medication_id: \"\",\n      amount: \"\",\n      medication_frequency_id: \"\",\n      medication_measurement_id: \"\",\n      prescribed_by: \"\",\n      // dropdown list of all doctors\n      prescribed_on: \"\",\n      pharmacy_id: \"\",\n      doctors: [],\n      medications: [],\n      medicationFrequencies: [],\n      medicationMeasurements: [],\n      pharmacies: []\n    };\n    console.log(this.state);\n  } //   onChangePatientId(e) {\n  //     this.setState({\n  //       patient_id: e.target.value\n  //     });\n  //   }\n\n\n  onChangeMedicationId(e) {\n    this.setState({\n      medication_id: e.target.value\n    });\n  }\n\n  onChangeAmount(e) {\n    this.setState({\n      amount: e.target.value\n    });\n  }\n\n  onChangeMedicationFrequencyId(e) {\n    this.setState({\n      medication_frequency_id: e.target.value\n    });\n  }\n\n  onChangeMedicationMeasurementId(e) {\n    this.setState({\n      medication_measurement_id: e.target.value\n    });\n  }\n\n  onChangePrescribedBy(e) {\n    this.setState({\n      prescribed_by: e.target.value\n    });\n  }\n\n  onChangePrescribedOn(e) {\n    this.setState({\n      prescribed_on: e.target.value\n    });\n  }\n\n  onChangePharmacyId(e) {\n    this.setState({\n      pharmacy_id: e.target.value\n    });\n  }\n\n  saveMedicationManagement(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      var data = {\n        patient_id: this.state.patient_id,\n        medication_id: this.state.medication_id,\n        amount: this.state.amount,\n        medication_frequency_id: this.state.medication_frequency_id,\n        medication_measurement_id: this.state.medication_measurement_id,\n        prescribed_by: this.state.prescribed_by,\n        prescribed_on: this.state.prescribed_on,\n        pharmacy_id: this.state.pharmacy_id\n      };\n      MedicationManagementDataService.create(data).then(response => {\n        this.props.history.push(\"/medication-management\");\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }\n\n  componentDidMount() {\n    // get drop down information\n    MedicationManagementDataService.getDoctors().then(response => {\n      this.setState({\n        doctors: response.data.result\n      });\n      console.log(this.state);\n    }, error => {\n      this.setState({\n        doctors: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n    MedicationManagementDataService.getMedications().then(response => {\n      this.setState({\n        medications: response.data.result\n      });\n    }, error => {\n      this.setState({\n        meciations: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n    MedicationManagementDataService.getMedicationFrequencies().then(response => {\n      this.setState({\n        medicatioFrequencies: response.data.result\n      });\n    }, error => {\n      this.setState({\n        medicationFrequencies: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n    MedicationManagementDataService.getMedicationMeasurements().then(response => {\n      this.setState({\n        medicationMeasurements: response.data.result\n      });\n    }, error => {\n      this.setState({\n        medicationMeasurements: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n    MedicationManagementDataService.getPharmacies().then(response => {\n      this.setState({\n        pharmacies: response.data.result\n      });\n    }, error => {\n      this.setState({\n        pharmacies: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.saveMedicationManagement,\n        ref: c => {\n          this.form = c;\n        },\n        children: [!this.state.submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"medication_id\",\n              children: \"Medication\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: this.state.medication_id,\n              onChange: this.onChangeMedicationId,\n              validations: [vrequired],\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select One\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), this.state.medications.length > 0 && this.state.medications.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.medication_id,\n                children: item.medications\n              }, item.medication_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"amount\",\n              value: this.state.amount,\n              onChange: this.onChangeAmount // validations={[vrequired, vlastName]}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"medication_frequency_id\",\n              children: \"Medication Frequency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: this.state.medication_frequency_id,\n              onChange: this.onChangeMedicationFrequencyId,\n              validations: [vrequired],\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select One\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this), this.state.medicationFrequencies.length > 0 && this.state.medicationFrequencies.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.medication_frequency_id,\n                children: item.medicationFrequencies\n              }, item.medication_frequency_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"medication_measurement_id\",\n              children: \"Medication Measurement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: this.state.medication_measurement_id,\n              onChange: this.onChangeMedicationMeasurementId,\n              validations: [vrequired],\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select One\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this), this.state.medicationMeasurements.length > 0 && this.state.medicationMeasurements.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.medication_measurement_id,\n                children: item.medicationMeasurements\n              }, item.medication_measurement_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"medication_id\",\n              children: \"Medication\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: this.state.medication_id,\n              onChange: this.onChangeMedicationId,\n              validations: [vrequired],\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select One\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this), this.state.medications.length > 0 && this.state.medications.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.medication_id,\n                children: item.medications\n              }, item.medication_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"amount\",\n              value: this.state.amount,\n              onChange: this.onChangeAmount // validations={[vrequired, vlastName]}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"prescribed_by\",\n              children: \"Prescribed By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: this.state.prescribed_by,\n              onChange: this.onChangePrescribedBy,\n              validations: [vrequired],\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select One\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), this.state.doctors.length > 0 && this.state.doctors.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.person_id,\n                children: [item.firstName, \" \", item.lastName]\n              }, item.person_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"prescribed_on\",\n              children: \"Prescribed On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"prescribed_on\",\n              value: this.state.prescribed_on,\n              onChange: this.onChangePrescribedOn,\n              validations: [vrequired, vdate]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pharmacy_id\",\n              children: \"Pharmacy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"pharmacy_id\",\n              value: this.state.pharmacy_id,\n              onChange: this.onChangePharmacyId // validations={[vrequired, vdate]}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this), \"*/}\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-block\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n            role: \"alert\",\n            children: this.state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n          style: {\n            display: \"none\"\n          },\n          ref: c => {\n            this.checkBtn = c;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management-create.component.js"],"names":["React","Component","Form","Input","Select","CheckButton","vrequired","vemail","vdate","vfirstName","vlastName","vaddress","vcity","vzip","MedicationManagementDataService","MedicationManagementCreate","constructor","props","saveMedicationManagement","bind","onChangeMedicationId","onChangeAmount","onChangeMedicationFrequencyId","onChangeMedicationMeasurementId","onChangePrescribedBy","onChangePrescribedOn","onChangePharmacyId","state","patient_id","medication_id","amount","medication_frequency_id","medication_measurement_id","prescribed_by","prescribed_on","pharmacy_id","doctors","medications","medicationFrequencies","medicationMeasurements","pharmacies","console","log","e","setState","target","value","preventDefault","message","loading","form","validateAll","checkBtn","context","_errors","length","data","create","then","response","history","push","window","location","reload","error","resMessage","toString","successful","catch","componentDidMount","getDoctors","result","getMedications","meciations","getMedicationFrequencies","medicatioFrequencies","getMedicationMeasurements","getPharmacies","render","c","submitted","map","item","person_id","firstName","lastName","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport { vrequired, vemail, vdate } from \"../common/validators\";\nimport { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\n\nimport MedicationManagementDataService from \"../services/medication-management.service\";\n// import MedicationService from \"../services/medication.service\";\n\n\nexport default class MedicationManagementCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.saveMedicationManagement = this.saveMedicationManagement.bind(this);\n    // this.onChangePatientId = this.onChangePatientId.bind(this);\n    this.onChangeMedicationId = this.onChangeMedicationId.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.onChangeMedicationFrequencyId = this.onChangeMedicationFrequencyId.bind(this);\n    this.onChangeMedicationMeasurementId = this.onChangeMedicationMeasurementId .bind(this);\n    this.onChangePrescribedBy = this.onChangePrescribedBy.bind(this);\n    this.onChangePrescribedOn= this.onChangePrescribedOn.bind(this);\n    this.onChangePharmacyId = this.onChangePharmacyId.bind(this);\n\n    this.state = {\n        patient_id: 1, // hard coded but should be either a dropdown or passed from personManagement/Profile\n        medication_id: \"\",\n        amount: \"\",\n        medication_frequency_id: \"\",\n        medication_measurement_id: \"\",\n        prescribed_by: \"\", // dropdown list of all doctors\n        prescribed_on: \"\",\n        pharmacy_id: \"\",\n        doctors: [],\n        medications: [],\n        medicationFrequencies: [],\n        medicationMeasurements: [],\n        pharmacies: [],\n    };\n    console.log(this.state);\n  }\n\n//   onChangePatientId(e) {\n//     this.setState({\n//       patient_id: e.target.value\n//     });\n//   }\n\n  onChangeMedicationId(e) {\n    this.setState({\n      medication_id: e.target.value\n    });\n  }\n\n  onChangeAmount(e) {\n    this.setState({\n      amount: e.target.value\n    });\n  }\n\n  onChangeMedicationFrequencyId(e) {\n    this.setState({\n      medication_frequency_id: e.target.value\n    });\n  }\n\n  onChangeMedicationMeasurementId(e) {\n    this.setState({\n      medication_measurement_id: e.target.value\n    });\n  }\n\n  onChangePrescribedBy(e) {\n    this.setState({\n       prescribed_by: e.target.value\n    });\n  }\n\n  onChangePrescribedOn(e) {\n    this.setState({\n       prescribed_on: e.target.value\n    });\n  }\n\n  onChangePharmacyId(e) {\n    this.setState({\n        pharmacy_id: e.target.value\n    });\n  }\n\n  saveMedicationManagement(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      var data = {\n        patient_id: this.state.patient_id,\n        medication_id: this.state.medication_id,\n        amount: this.state.amount,\n        medication_frequency_id: this.state.medication_frequency_id,\n        medication_measurement_id: this.state.medication_measurement_id,\n        prescribed_by: this.state.prescribed_by,\n        prescribed_on: this.state.prescribed_on,\n        pharmacy_id: this.state.pharmacy_id,\n      };\n\n      MedicationManagementDataService.create(data)\n        .then(\n          response => {\n            this.props.history.push(\"/medication-management\");\n            window.location.reload();\n          },\n          error => {\n            const resMessage =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n\n            this.setState({\n              successful: false,\n              message: resMessage\n            });\n          }\n        )\n        .catch(e => {\n          console.log(e);\n        });\n    }\n  }\n\n\n\n   componentDidMount() {\n     // get drop down information\n     MedicationManagementDataService.getDoctors().then(\n       response => {\n         this.setState({\n           doctors: response.data.result\n         });\n         console.log(this.state);\n       },\n       error => {\n         this.setState({\n           doctors:\n             (error.response &&\n               error.response.data &&\n               error.response.data.message) ||\n             error.message ||\n             error.toString()\n         });\n       }\n     );\n\n     MedicationManagementDataService.getMedications().then(\n       response => {\n         this.setState({\n           medications: response.data.result\n         });\n       },\n      error => {\n        this.setState({\n          meciations:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n\n    MedicationManagementDataService.getMedicationFrequencies().then(\n      response => {\n        this.setState({\n          medicatioFrequencies: response.data.result\n        });\n      },\n      error => {\n        this.setState({\n          medicationFrequencies:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n\n    MedicationManagementDataService.getMedicationMeasurements().then(\n      response => {\n        this.setState({\n          medicationMeasurements: response.data.result\n        });\n      },\n      error => {\n        this.setState({\n          medicationMeasurements:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n\n    MedicationManagementDataService.getPharmacies().then(\n      response => {\n        this.setState({\n          pharmacies: response.data.result\n        });\n      },\n      error => {\n        this.setState({\n          pharmacies:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n   }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n          <Form\n            onSubmit={this.saveMedicationManagement}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.submitted && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_id\">Medication</label>\n                  <Select\n                    value={this.state.medication_id}\n                    onChange={this.onChangeMedicationId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medications.length > 0 &&\n                      this.state.medications.map(item => (\n                        <option key={item.medication_id} value={item.medication_id}>\n                          {item.medications}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"amount\">Amount</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"amount\"\n                    value={this.state.amount}\n                    onChange={this.onChangeAmount}\n                    // validations={[vrequired, vlastName]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_frequency_id\">Medication Frequency</label>\n                  <Select\n                    value={this.state.medication_frequency_id}\n                    onChange={this.onChangeMedicationFrequencyId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medicationFrequencies.length > 0 &&\n                      this.state.medicationFrequencies.map(item => (\n                        <option key={item.medication_frequency_id} value={item.medication_frequency_id}>\n                          {item.medicationFrequencies}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_measurement_id\">Medication Measurement</label>\n                  <Select\n                    value={this.state.medication_measurement_id}\n                    onChange={this.onChangeMedicationMeasurementId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medicationMeasurements.length > 0 &&\n                      this.state.medicationMeasurements.map(item => (\n                        <option key={item.medication_measurement_id} value={item.medication_measurement_id}>\n                          {item.medicationMeasurements}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_id\">Medication</label>\n                  <Select\n                    value={this.state.medication_id}\n                    onChange={this.onChangeMedicationId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medications.length > 0 &&\n                      this.state.medications.map(item => (\n                        <option key={item.medication_id} value={item.medication_id}>\n                          {item.medications}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n\n                {/* <div className=\"form-group\">\n                  <label htmlFor=\"medication_id\">Medication</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"medication_id\"\n                    value={this.state.medication_id}\n                    onChange={this.onChangeMedicationId}\n                    // validations={[vrequired, vfirstName]}\n                  />\n                </div> */}\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"amount\">Amount</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"amount\"\n                    value={this.state.amount}\n                    onChange={this.onChangeAmount}\n                    // validations={[vrequired, vlastName]}\n                  />\n                </div>\n\n            \n                <div className=\"form-group\">\n                  <label htmlFor=\"prescribed_by\">Prescribed By</label>\n                  <Select\n                    value={this.state.prescribed_by}\n                    onChange={this.onChangePrescribedBy}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.doctors.length > 0 &&\n                      this.state.doctors.map(item => (\n                        <option key={item.person_id} value={item.person_id}>\n                          {item.firstName} {item.lastName}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n        \n \n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"prescribed_on\">Prescribed On</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"prescribed_on\"\n                    value={this.state.prescribed_on}\n                    onChange={this.onChangePrescribedOn}\n                    validations={[vrequired, vdate]}\n                  />\n                </div> \n             \n\n                <div className=\"form-group\">\n                  <label htmlFor=\"pharmacy_id\">Pharmacy</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"pharmacy_id\"\n                    value={this.state.pharmacy_id}\n                    onChange={this.onChangePharmacyId}\n                    // validations={[vrequired, vdate]}\n                  />\n                </div>\n */}\n\n\n                 \n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Save</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}