{"ast":null,"code":"var _jsxFileName = \"/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management-list.js\";\nimport React, { Component } from \"react\";\nimport PersonManagementDataService from \"../services/person-management.service\";\nimport MedicationManagementDataService from \"../services/medication-management.service\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport { vrequired, vemail, vdate } from \"../common/validators\";\nimport { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MedicationManagementList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchMedication = this.onChangeSearchMedication.bind(this);\n    this.deleteMedicationManagement = this.deleteMedicationManagement.bind(this);\n    this.retrieveMedicationManagement = this.retrieveMedicationManagement.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveMedicationManagement = this.setActiveMedicationManagement.bind(this);\n    this.searchMedication = this.searchMedication.bind(this);\n    this.state = {\n      person_id: this.props.match.params.person_id,\n      // null,\n      medicationManagement: [],\n      currentMedicationManagement: null,\n      currentIndex: -1,\n      searchParams: {\n        medication: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    //this.getPersonManagement(this.props.match.params.person_id);\n    this.retrieveMedicationManagement();\n  }\n\n  onChangeSearchMedication(e) {\n    const searchMedication = e.target.value;\n    this.setState({\n      searchParams: { ...this.state.searchParams,\n        medication: searchMedication\n      }\n    });\n    console.log(this.state);\n  }\n\n  deleteMedicationManagement() {\n    MedicationManagementDataService.delete(this.state.currentMedicationManagement.medication_id).then(() => {\n      window.location.reload();\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  retrieveMedicationManagement() {\n    MedicationManagementDataService.getAll(this.state.person_id).then(response => {\n      this.setState({\n        medicationManagement: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  searchMedication() {\n    this.setState({\n      currentMedicationManagement: null,\n      currentIndex: -1\n    });\n    MedicationManagementDataService.findMedication(this.state.searchParams).then(response => {\n      this.setState({\n        medicationManagement: response.data\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  refreshList() {\n    this.retrieveMedicationManagement();\n    this.setState({\n      currentMedicationManagement: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveMedicationManagement(medicationManagement, index) {\n    console.log(medicationManagement);\n    this.setState({\n      currentMedicationManagement: medicationManagement,\n      currentIndex: index\n    });\n  }\n\n  render() {\n    const {\n      medicationManagement,\n      currentMedicationManagement,\n      currentIndex\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Medication Name\",\n            value: this.state.searchParams.medication,\n            onChange: this.onChangeSearchMedication\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-append\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-secondary\",\n              type: \"button\",\n              onClick: this.searchMedication,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Medication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Measurement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Frequency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: medicationManagement && medicationManagement.map((medicationManagement, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              role: \"row\",\n              onClick: () => this.setActiveMedicationManagement(medicationManagement, index),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: medicationManagement.medication\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: medicationManagement.measurement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: medicationManagement.frequency\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this)]\n            }, medicationManagement.medication_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: currentMedicationManagement ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Edit Medication\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.updateMedicationManagement,\n            ref: c => {\n              this.form = c;\n            },\n            children: [!this.state.submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"medication_id\",\n                  children: \"Medication\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: this.state.medication_id,\n                  onChange: this.onChangeMedicationId,\n                  validations: [vrequired],\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select One\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 19\n                  }, this), this.state.medications.length > 0 && this.state.medications.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.medication_id,\n                    children: item.medications\n                  }, item.medication_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"amount\",\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"amount\",\n                  value: this.state.amount,\n                  onChange: this.onChangeAmount,\n                  validations: [vrequired]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"medication_frequency_id\",\n                  children: \"Medication Frequency\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: this.state.medication_frequency_id,\n                  onChange: this.onChangeMedicationFrequencyId,\n                  validations: [vrequired],\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select One\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 19\n                  }, this), this.state.medicationFrequencies.length > 0 && this.state.medicationFrequencies.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.medication_frequency_id,\n                    children: item.medicationFrequencies\n                  }, item.medication_frequency_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"medication_measurement_id\",\n                  children: \"Medication Measurement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: this.state.medication_measurement_id,\n                  onChange: this.onChangeMedicationMeasurementId,\n                  validations: [vrequired],\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select One\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 19\n                  }, this), this.state.medicationMeasurements.length > 0 && this.state.medicationMeasurements.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.medication_measurement_id,\n                    children: item.medicationMeasurements\n                  }, item.medication_measurement_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"prescribed_by\",\n                  children: \"Prescribed By\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: this.state.prescribed_by,\n                  onChange: this.onChangePrescribedBy,\n                  validations: [vrequired],\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select One\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 19\n                  }, this), this.state.doctors.length > 0 && this.state.doctors.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.person_id,\n                    children: [item.firstName, \" \", item.lastName]\n                  }, item.person_id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"prescribed_on\",\n                  children: \"Prescribed On\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"prescribed_on\",\n                  value: this.state.prescribed_on,\n                  onChange: this.onChangePrescribedOn,\n                  validations: [vrequired, vdate]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"pharmacy_id\",\n                  children: \"Pharmacy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: this.state.pharmacy_id,\n                  onChange: this.onChangePharmacyId,\n                  validations: [vrequired],\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select One\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 19\n                  }, this), this.state.pharmacies.length > 0 && this.state.pharmacies.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.pharmacy_id,\n                    children: item.pharmacies\n                  }, item.pharmacy_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary btn-block\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 43\n            }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n                role: \"alert\",\n                children: this.state.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n              style: {\n                display: \"none\"\n              },\n              ref: c => {\n                this.checkBtn = c;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please click on a Medication Record...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-block\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management-list.js"],"names":["React","Component","PersonManagementDataService","MedicationManagementDataService","Link","Form","Input","Select","CheckButton","vrequired","vemail","vdate","vfirstName","vlastName","vaddress","vcity","vzip","MedicationManagementList","constructor","props","onChangeSearchMedication","bind","deleteMedicationManagement","retrieveMedicationManagement","refreshList","setActiveMedicationManagement","searchMedication","state","person_id","match","params","medicationManagement","currentMedicationManagement","currentIndex","searchParams","medication","componentDidMount","e","target","value","setState","console","log","delete","medication_id","then","window","location","reload","catch","getAll","response","data","findMedication","index","render","map","measurement","frequency","updateMedicationManagement","c","form","submitted","onChangeMedicationId","medications","length","item","amount","onChangeAmount","medication_frequency_id","onChangeMedicationFrequencyId","medicationFrequencies","medication_measurement_id","onChangeMedicationMeasurementId","medicationMeasurements","prescribed_by","onChangePrescribedBy","doctors","firstName","lastName","prescribed_on","onChangePrescribedOn","pharmacy_id","onChangePharmacyId","pharmacies","message","successful","display","checkBtn"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PersonManagementDataService from \"../services/person-management.service\";\nimport MedicationManagementDataService from \"../services/medication-management.service\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport { vrequired, vemail, vdate } from \"../common/validators\";\nimport { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\n\n\nexport default class MedicationManagementList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchMedication = this.onChangeSearchMedication.bind(this);\n\n    this.deleteMedicationManagement = this.deleteMedicationManagement.bind(this);\n    this.retrieveMedicationManagement = this.retrieveMedicationManagement.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveMedicationManagement = this.setActiveMedicationManagement.bind(this);\n    this.searchMedication = this.searchMedication.bind(this);\n\n    this.state = {\n      person_id: this.props.match.params.person_id,// null,\n      medicationManagement: [],\n      currentMedicationManagement: null,\n      currentIndex: -1,\n      \n      searchParams: {\n        medication: \"\",\n      }\n    }\n  }\n  componentDidMount() {\n    //this.getPersonManagement(this.props.match.params.person_id);\n    \n    this.retrieveMedicationManagement();\n  }\n\n  onChangeSearchMedication(e) {\n    const searchMedication = e.target.value;\n    this.setState({ \n      searchParams: { ...this.state.searchParams, medication: searchMedication} \n    });\n    console.log(this.state);\n  }\n\n  deleteMedicationManagement() {    \n    MedicationManagementDataService.delete(this.state.currentMedicationManagement.medication_id)\n      .then(() => {\n        window.location.reload();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  retrieveMedicationManagement() {\n    MedicationManagementDataService.getAll(this.state.person_id)\n      .then(response => {\n        this.setState({\n          medicationManagement: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  searchMedication() {\n    this.setState({\n      currentMedicationManagement: null,\n      currentIndex: -1\n    });\n\n    MedicationManagementDataService.findMedication(this.state.searchParams)\n      .then(response => {\n        this.setState({\n          medicationManagement: response.data\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveMedicationManagement();\n    this.setState({\n      currentMedicationManagement: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveMedicationManagement(medicationManagement, index) {console.log(medicationManagement);\n    this.setState({\n      currentMedicationManagement: medicationManagement,\n      currentIndex: index\n    });\n  }\n\n  render() {\n    const { medicationManagement, currentMedicationManagement, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Medication Name\"\n              value={this.state.searchParams.medication}\n              onChange={this.onChangeSearchMedication}\n            />\n           \n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.searchMedication}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n       \n        <div className=\"col-md-6\">\n          {/* <h4>Person List</h4> */}\n\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Medication</th>\n                <th scope=\"col\">Measurement</th>\n                <th scope=\"col\">Frequency</th>\n              </tr>\n            </thead>\n            <tbody>\n              {medicationManagement &&\n                medicationManagement.map((medicationManagement, index) => (\n                  <tr \n                    role=\"row\" \n                    key={medicationManagement.medication_id}\n                    onClick={() => this.setActiveMedicationManagement(medicationManagement, index)}\n                  > \n                    <td>{medicationManagement.medication}</td>\n                    <td>{medicationManagement.measurement}</td>\n                    <td>{medicationManagement.frequency}</td>\n\n                    \n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n\n\n\n        <div className=\"col-md-6\">\n          {currentMedicationManagement ? ( \n            \n          <div className=\"edit-form\">\n          <h4>Edit Medication</h4>\n            <Form\n              onSubmit={this.updateMedicationManagement}\n              ref={c => {\n                this.form = c;\n              }}\n            >\n              {!this.state.submitted && ( <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"medication_id\">Medication</label>\n                <Select\n                  value={this.state.medication_id}\n                  onChange={this.onChangeMedicationId}\n                  validations={[vrequired]}\n                >\n                  <option value=\"\">Select One</option>\n                  {this.state.medications.length > 0 &&\n                    this.state.medications.map(item => (\n                      <option key={item.medication_id} value={item.medication_id}>\n                        {item.medications}\n                      </option>\n                    ))}\n                </Select>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"amount\">Amount</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"amount\"\n                  value={this.state.amount}\n                  onChange={this.onChangeAmount}\n                  validations={[vrequired]}\n                />\n              </div>\n\n\n              <div className=\"form-group\">\n                <label htmlFor=\"medication_frequency_id\">Medication Frequency</label>\n                <Select\n                  value={this.state.medication_frequency_id}\n                  onChange={this.onChangeMedicationFrequencyId}\n                  validations={[vrequired]}\n                >\n                  <option value=\"\">Select One</option>\n                  {this.state.medicationFrequencies.length > 0 &&\n                    this.state.medicationFrequencies.map(item => (\n                      <option key={item.medication_frequency_id} value={item.medication_frequency_id}>\n                        {item.medicationFrequencies}\n                      </option>\n                    ))}\n                </Select>\n              </div>\n\n               <div className=\"form-group\">\n                <label htmlFor=\"medication_measurement_id\">Medication Measurement</label>\n                <Select\n                  value={this.state.medication_measurement_id}\n                  onChange={this.onChangeMedicationMeasurementId}\n                  validations={[vrequired]}\n                >\n                  <option value=\"\">Select One</option>\n                  {this.state.medicationMeasurements.length > 0 &&\n                    this.state.medicationMeasurements.map(item => (\n                      <option key={item.medication_measurement_id} value={item.medication_measurement_id}>\n                        {item.medicationMeasurements}\n                      </option>\n                    ))}\n                </Select>\n              </div>\n\n              {/* <div className=\"form-group\">\n                <label htmlFor=\"medication_frequency_id\">Medication Frequency</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={this.state.medication_frequency_id}\n                  onChange={this.onChangeMedicationFrequency}\n                  // validations={[vrequired, vemail]}\n                />\n              </div> */}\n\n              {/* <div className=\"form-group\">\n                <label htmlFor=\"medication_measurement_id\">Medication Measurement</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"birthday\"\n                  value={this.state.medication_measurement_id}\n                  onChange={this.onChangeMedicationMeasurementId}\n                  // validations={[vrequired, vdate]}\n                />\n              </div> */}\n\n             <div className=\"form-group\">\n                <label htmlFor=\"prescribed_by\">Prescribed By</label>\n                <Select\n                  value={this.state.prescribed_by}\n                  onChange={this.onChangePrescribedBy}\n                  validations={[vrequired]}\n                >\n                  <option value=\"\">Select One</option>\n                  {this.state.doctors.length > 0 &&\n                    this.state.doctors.map(item => (\n                      <option key={item.person_id} value={item.person_id}>\n                        {item.firstName} {item.lastName}\n                      </option>\n                    ))}\n                </Select>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"prescribed_on\">Prescribed On</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"prescribed_on\"\n                  value={this.state.prescribed_on}\n                  onChange={this.onChangePrescribedOn}\n                  validations={[vrequired, vdate]}\n                />\n              </div> \n           \n\n               <div className=\"form-group\">\n                <label htmlFor=\"pharmacy_id\">Pharmacy</label>\n                <Select\n                  value={this.state.pharmacy_id}\n                  onChange={this.onChangePharmacyId}\n                  validations={[vrequired]}\n                >\n                  <option value=\"\">Select One</option>\n                  {this.state.pharmacies.length > 0 &&\n                    this.state.pharmacies.map(item => (\n                      <option key={item.pharmacy_id} value={item.pharmacy_id}>\n                        {item.pharmacies}\n                      </option>\n                    ))}\n                </Select>\n              </div>\n\n\n\n                  <div className=\"form-group\">\n                    <button className=\"btn btn-primary btn-block\">Save</button>\n                  </div>\n                </div>\n              )}\n\n              {this.state.message && (\n                <div className=\"form-group\">\n                  <div\n                    className={\n                      this.state.successful\n                        ? \"alert alert-success\"\n                        : \"alert alert-danger\"\n                    }\n                    role=\"alert\"\n                  >\n                    {this.state.message}\n                  </div>\n                </div>\n              )}\n              <CheckButton\n                style={{ display: \"none\" }}\n                ref={c => {\n                  this.checkBtn = c;\n                }}\n              />\n            </Form>\n        </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a Medication Record...</p>\n            </div>\n          )}\n        </div>\n\n        \n        <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Save</button>\n        </div>\n            \n        \n        </div>\n    )       \n  }\n}\n"]},"metadata":{},"sourceType":"module"}