{"ast":null,"code":"var _jsxFileName = \"/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport { vrequired, vemail, vdate } from \"../common/validators\";\nimport { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\nimport MedicationManagementDataService from \"../services/medication-management.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PersonManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePatientId = this.onChangePatientId.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.onChangeMedicationFrequencyId = this.onChangeMedicationFrequencyId.bind(this);\n    this.onChangeMedicationMeasurementId = this.onChangeMedicationMeasurementId.bind(this);\n    this.onChangePrescribedBy = this.onChangePrescribedBy.bind(this);\n    this.onChangePrescribedOn = this.onChangePrescribedOn.bind(this);\n    this.onChangePharmacyId = this.onChangePharmacyId.bind(this);\n    this.getMedicationManagement = this.getMedicationManagement.bind(this);\n    this.updateMedicationManagement = this.updateMedicationManagement.bind(this);\n    this.state = {\n      currentMedicationManagement: {\n        patient_id: \"\",\n        medication_id: \"\",\n        amount: \"\",\n        medication_frequency_id: \"\",\n        medication_measurement_id: \"\",\n        prescribed_by: \"\",\n        prescribed_on: \"\",\n        pharmacy_id: \"\"\n      },\n      message: \"\",\n      submitted: false,\n      // dropdown options\n      medications: [],\n      medicationFrequencies: [],\n      medicationMeasurements: [],\n      doctors: [],\n      pharmacies: []\n    };\n  }\n\n  onChangeMedicationID(e) {\n    const medication_id = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentMedicationManagement: { ...prevState.currentMedicationManagement,\n          medication_id: medication_id\n        }\n      };\n    });\n  }\n\n  onChangeMedicationFrequencyId(e) {\n    const medication_frequency_id = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentMedicationManagement: { ...prevState.currentMedicationManagement,\n          medication_frequency_id: medication_frequency_id\n        }\n      };\n    });\n  }\n\n  onChangeMedicationMeasurementId(e) {\n    const medication_measurement_id = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentMedicationManagement: { ...prevState.currentMedicationManagement,\n          medication_measurement_id: medication_measurement_id\n        }\n      };\n    });\n  }\n\n  getMedicationManagement(medication_id) {\n    MedicationManagementDataService.get(medication_id).then(response => {\n      this.setState({\n        currentMedicationManagement: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateMedicationManagement(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      MedicationManagementDataService.update(this.state.currentMedicationManagement.medication_id, this.state.currentMedicationManagement).then(response => {\n        this.props.history.push('/medication-management');\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getMedicationManagement(this.props.match.params.medication_id); // get drop down information\n\n    MedicationManagementDataService.getMedications().then(response => {\n      this.setState({\n        medications: response.data.result\n      });\n    }, error => {\n      this.setState({\n        meciations: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n    MedicationManagementDataService.getMedicationFrequencies().then(response => {\n      this.setState({\n        medicationFrequencies: response.data.result\n      });\n    }, error => {\n      this.setState({\n        medicationFrequencies: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n    MedicationManagementDataService.getMedicationMeasurements().then(response => {\n      this.setState({\n        medicationMeasurements: response.data.result\n      });\n    }, error => {\n      this.setState({\n        medicationMeasurements: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n    MedicationManagementDataService.getDoctors().then(response => {\n      this.setState({\n        doctors: response.data.result\n      });\n      console.log(this.state);\n    }, error => {\n      this.setState({\n        doctors: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n    MedicationManagementDataService.getPharmacies().then(response => {\n      this.setState({\n        pharmacies: response.data.result\n      });\n    }, error => {\n      this.setState({\n        pharmacies: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n  }\n\n  render() {\n    const {\n      currentMedicationManagement\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentMedicationManagement ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Edit Medication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.updateMedicationManagement,\n          ref: c => {\n            this.form = c;\n          },\n          children: [!this.state.submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"medication_id\",\n                children: \"Medication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: this.state.medication_id,\n                onChange: this.onChangeMedicationId,\n                validations: [vrequired],\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select One\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this), this.state.medications.length > 0 && this.state.medications.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.medication_id,\n                  children: item.medications\n                }, item.medication_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"amount\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"amount\",\n                value: this.state.amount,\n                onChange: this.onChangeAmount,\n                validations: [vrequired]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"medication_frequency_id\",\n                children: \"Medication Frequency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: this.state.medication_frequency_id,\n                onChange: this.onChangeMedicationFrequencyId,\n                validations: [vrequired],\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select One\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this), this.state.medicationFrequencies.length > 0 && this.state.medicationFrequencies.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.medication_frequency_id,\n                  children: item.medicationFrequencies\n                }, item.medication_frequency_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"medication_measurement_id\",\n                children: \"Medication Measurement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: this.state.medication_measurement_id,\n                onChange: this.onChangeMedicationMeasurementId,\n                validations: [vrequired],\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select One\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this), this.state.medicationMeasurements.length > 0 && this.state.medicationMeasurements.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.medication_measurement_id,\n                  children: item.medicationMeasurements\n                }, item.medication_measurement_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"prescribed_by\",\n                children: \"Prescribed By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: this.state.prescribed_by,\n                onChange: this.onChangePrescribedBy,\n                validations: [vrequired],\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select One\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this), this.state.doctors.length > 0 && this.state.doctors.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.person_id,\n                  children: [item.firstName, \" \", item.lastName]\n                }, item.person_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"prescribed_on\",\n                children: \"Prescribed On\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"prescribed_on\",\n                value: this.state.prescribed_on,\n                onChange: this.onChangePrescribedOn,\n                validations: [vrequired, vdate]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pharmacy_id\",\n                children: \"Pharmacy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: this.state.pharmacy_id,\n                onChange: this.onChangePharmacyId,\n                validations: [vrequired],\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select One\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this), this.state.pharmacies.length > 0 && this.state.pharmacies.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.pharmacy_id,\n                  children: item.pharmacies\n                }, item.pharmacy_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary btn-block\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 45\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n              role: \"alert\",\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n            style: {\n              display: \"none\"\n            },\n            ref: c => {\n              this.checkBtn = c;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Could not find medication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/xuasong/Documents/GitHub/react/front-end/src/components/medication-management.component.js"],"names":["React","Component","Form","Input","Select","CheckButton","vrequired","vemail","vdate","vfirstName","vlastName","vaddress","vcity","vzip","MedicationManagementDataService","PersonManagement","constructor","props","onChangePatientId","bind","onChangeAmount","onChangeMedicationFrequencyId","onChangeMedicationMeasurementId","onChangePrescribedBy","onChangePrescribedOn","onChangePharmacyId","getMedicationManagement","updateMedicationManagement","state","currentMedicationManagement","patient_id","medication_id","amount","medication_frequency_id","medication_measurement_id","prescribed_by","prescribed_on","pharmacy_id","message","submitted","medications","medicationFrequencies","medicationMeasurements","doctors","pharmacies","onChangeMedicationID","e","target","value","setState","prevState","get","then","response","data","console","log","catch","preventDefault","loading","form","validateAll","checkBtn","context","_errors","length","update","history","push","window","location","reload","error","resMessage","toString","successful","componentDidMount","match","params","getMedications","result","meciations","getMedicationFrequencies","getMedicationMeasurements","getDoctors","getPharmacies","render","c","onChangeMedicationId","map","item","person_id","firstName","lastName","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport { vrequired, vemail, vdate } from \"../common/validators\";\nimport { vfirstName, vlastName, vaddress, vcity, vzip } from \"../common/person-validators\";\n\nimport MedicationManagementDataService from \"../services/medication-management.service\";\n\n\nexport default class PersonManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePatientId = this.onChangePatientId.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.onChangeMedicationFrequencyId = this.onChangeMedicationFrequencyId.bind(this);\n    this.onChangeMedicationMeasurementId = this.onChangeMedicationMeasurementId .bind(this);\n    this.onChangePrescribedBy = this.onChangePrescribedBy.bind(this);\n    this.onChangePrescribedOn= this.onChangePrescribedOn.bind(this);\n    this.onChangePharmacyId = this.onChangePharmacyId.bind(this);\n\n    this.getMedicationManagement = this.getMedicationManagement.bind(this);\n    this.updateMedicationManagement = this.updateMedicationManagement.bind(this);\n\n    this.state = {\n\n      currentMedicationManagement: {\n        patient_id: \"\",\n\n        medication_id: \"\",\n        amount: \"\",\n        medication_frequency_id: \"\",\n        medication_measurement_id: \"\",\n        prescribed_by: \"\",\n        prescribed_on: \"\",\n        pharmacy_id: \"\"\n      },\n      message: \"\",\n      submitted: false,\n  \n      // dropdown options\n      medications: [],\n      medicationFrequencies: [],\n      medicationMeasurements: [],\n      doctors: [],    \n      pharmacies: [],\n        \n    };\n     \n  }\n\n  onChangeMedicationID(e) {\n    const medication_id = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentMedicationManagement: {\n          ...prevState.currentMedicationManagement,\n          medication_id: medication_id\n        }\n      };\n    });\n  }\n\n  onChangeMedicationFrequencyId(e) {\n    const medication_frequency_id = e.target.value;\n    this.setState(function(prevState) {\n      return {\n        currentMedicationManagement: {\n          ...prevState.currentMedicationManagement,\n          medication_frequency_id:medication_frequency_id\n        }\n      };\n    });\n  }\n\n  onChangeMedicationMeasurementId(e) {\n    const medication_measurement_id = e.target.value;\n    this.setState(function(prevState) {\n      return {\n        currentMedicationManagement: {\n          ...prevState.currentMedicationManagement,\n          medication_measurement_id:medication_measurement_id\n        }\n      };\n    });\n  }\n\n\n  getMedicationManagement(medication_id) {\n    MedicationManagementDataService.get(medication_id)\n      .then(response => {\n        this.setState({\n          currentMedicationManagement: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateMedicationManagement(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      MedicationManagementDataService.update(\n        this.state.currentMedicationManagement.medication_id,\n        this.state.currentMedicationManagement\n      ).then(\n        response => {\n          this.props.history.push('/medication-management')\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    }\n  }\n\n  componentDidMount() {\n    this.getMedicationManagement(this.props.match.params.medication_id);\n\n    \n    // get drop down information\n    \n    MedicationManagementDataService.getMedications().then(\n      response => {\n        this.setState({\n          medications: response.data.result\n        });\n      },\n     error => {\n       this.setState({\n         meciations:\n           (error.response &&\n             error.response.data &&\n             error.response.data.message) ||\n           error.message ||\n           error.toString()\n       });\n     }\n   );\n\n   MedicationManagementDataService.getMedicationFrequencies().then(\n     response => {\n       this.setState({\n         medicationFrequencies: response.data.result\n       });\n     },\n     error => {\n       this.setState({\n         medicationFrequencies:\n           (error.response &&\n             error.response.data &&\n             error.response.data.message) ||\n           error.message ||\n           error.toString()\n       });\n     }\n   );\n\n   MedicationManagementDataService.getMedicationMeasurements().then(\n     response => {\n       this.setState({\n         medicationMeasurements: response.data.result\n       });\n     },\n     error => {\n       this.setState({\n         medicationMeasurements:\n           (error.response &&\n             error.response.data &&\n             error.response.data.message) ||\n           error.message ||\n           error.toString()\n       });\n     }\n   );\n\n   MedicationManagementDataService.getDoctors().then(\n       response => {\n         this.setState({\n           doctors: response.data.result\n         });\n         console.log(this.state);\n       },\n       error => {\n         this.setState({\n           doctors:\n             (error.response &&\n               error.response.data &&\n               error.response.data.message) ||\n             error.message ||\n             error.toString()\n         });\n       }\n     );\n\n   MedicationManagementDataService.getPharmacies().then(\n     response => {\n       this.setState({\n         pharmacies: response.data.result\n       });\n     },\n     error => {\n       this.setState({\n         pharmacies:\n           (error.response &&\n             error.response.data &&\n             error.response.data.message) ||\n           error.message ||\n           error.toString()\n       });\n     }\n   );\n  }\n\n  render() {\n    const { currentMedicationManagement } = this.state;\n\n    return (\n      <div>\n        {currentMedicationManagement ? (\n          <div className=\"edit-form\">\n            <h4>Edit Medication</h4>\n              <Form\n                onSubmit={this.updateMedicationManagement}\n                ref={c => {\n                  this.form = c;\n                }}\n              >\n                {!this.state.submitted && ( <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_id\">Medication</label>\n                  <Select\n                    value={this.state.medication_id}\n                    onChange={this.onChangeMedicationId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medications.length > 0 &&\n                      this.state.medications.map(item => (\n                        <option key={item.medication_id} value={item.medication_id}>\n                          {item.medications}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"amount\">Amount</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"amount\"\n                    value={this.state.amount}\n                    onChange={this.onChangeAmount}\n                    validations={[vrequired]}\n                  />\n                </div>\n\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"medication_frequency_id\">Medication Frequency</label>\n                  <Select\n                    value={this.state.medication_frequency_id}\n                    onChange={this.onChangeMedicationFrequencyId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medicationFrequencies.length > 0 &&\n                      this.state.medicationFrequencies.map(item => (\n                        <option key={item.medication_frequency_id} value={item.medication_frequency_id}>\n                          {item.medicationFrequencies}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                 <div className=\"form-group\">\n                  <label htmlFor=\"medication_measurement_id\">Medication Measurement</label>\n                  <Select\n                    value={this.state.medication_measurement_id}\n                    onChange={this.onChangeMedicationMeasurementId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.medicationMeasurements.length > 0 &&\n                      this.state.medicationMeasurements.map(item => (\n                        <option key={item.medication_measurement_id} value={item.medication_measurement_id}>\n                          {item.medicationMeasurements}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n                {/* <div className=\"form-group\">\n                  <label htmlFor=\"medication_frequency_id\">Medication Frequency</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.medication_frequency_id}\n                    onChange={this.onChangeMedicationFrequency}\n                    // validations={[vrequired, vemail]}\n                  />\n                </div> */}\n\n                {/* <div className=\"form-group\">\n                  <label htmlFor=\"medication_measurement_id\">Medication Measurement</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"birthday\"\n                    value={this.state.medication_measurement_id}\n                    onChange={this.onChangeMedicationMeasurementId}\n                    // validations={[vrequired, vdate]}\n                  />\n                </div> */}\n\n               <div className=\"form-group\">\n                  <label htmlFor=\"prescribed_by\">Prescribed By</label>\n                  <Select\n                    value={this.state.prescribed_by}\n                    onChange={this.onChangePrescribedBy}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.doctors.length > 0 &&\n                      this.state.doctors.map(item => (\n                        <option key={item.person_id} value={item.person_id}>\n                          {item.firstName} {item.lastName}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n \n                <div className=\"form-group\">\n                  <label htmlFor=\"prescribed_on\">Prescribed On</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"prescribed_on\"\n                    value={this.state.prescribed_on}\n                    onChange={this.onChangePrescribedOn}\n                    validations={[vrequired, vdate]}\n                  />\n                </div> \n             \n\n                 <div className=\"form-group\">\n                  <label htmlFor=\"pharmacy_id\">Pharmacy</label>\n                  <Select\n                    value={this.state.pharmacy_id}\n                    onChange={this.onChangePharmacyId}\n                    validations={[vrequired]}\n                  >\n                    <option value=\"\">Select One</option>\n                    {this.state.pharmacies.length > 0 &&\n                      this.state.pharmacies.map(item => (\n                        <option key={item.pharmacy_id} value={item.pharmacy_id}>\n                          {item.pharmacies}\n                        </option>\n                      ))}\n                  </Select>\n                </div>\n\n\n\n                    <div className=\"form-group\">\n                      <button className=\"btn btn-primary btn-block\">Save</button>\n                    </div>\n                  </div>\n                )}\n\n                {this.state.message && (\n                  <div className=\"form-group\">\n                    <div\n                      className={\n                        this.state.successful\n                          ? \"alert alert-success\"\n                          : \"alert alert-danger\"\n                      }\n                      role=\"alert\"\n                    >\n                      {this.state.message}\n                    </div>\n                  </div>\n                )}\n                <CheckButton\n                  style={{ display: \"none\" }}\n                  ref={c => {\n                    this.checkBtn = c;\n                  }}\n                />\n              </Form>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Could not find medication</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}